<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>前缀和 on</title><link>https://booiris.space/tags/%E5%89%8D%E7%BC%80%E5%92%8C/</link><description>Recent content in 前缀和 on</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Sat, 11 Jun 2022 14:27:11 +0000</lastBuildDate><atom:link href="https://booiris.space/tags/%E5%89%8D%E7%BC%80%E5%92%8C/index.xml" rel="self" type="application/rss+xml"/><item><title>926-Flip String to Monotone Increasing</title><link>https://booiris.space/wiki/leetcode/926-flip-string-to-monotone-increasing/</link><pubDate>Sat, 11 Jun 2022 14:27:11 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/926-flip-string-to-monotone-increasing/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给定一串01串，能够对其每一位进行翻转，即0变1，1变0。要求最终得到一个不下降的01串，例如000111111，求最小翻转次数。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>使用前缀和统计每一位左边0和1，和右边0和1的个数，枚举每一位 i 作为0到1上升的边缘。i 左边全为0，右边全为1，所以翻转次数为 i 左边1的个数加上 i 右边0的个数，最后求出最小值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> key0&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">100005&lt;/span>&lt;span style="color:#1f2328">],&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">100005&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">minFlipsMonoIncr&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>string s&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> cnt0 &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> index &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#900;font-weight:bold">x&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> s&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key0&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+=&lt;/span> key0&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">],&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+=&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>x &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#39;0&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt0&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key0&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key1&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> res &lt;span style="color:#0550ae">=&lt;/span> INT_MAX&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;=&lt;/span> s&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#0550ae">=&lt;/span> min&lt;span style="color:#1f2328">(&lt;/span>res&lt;span style="color:#1f2328">,&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> cnt0 &lt;span style="color:#0550ae">-&lt;/span> key0&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>