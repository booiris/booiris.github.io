<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://booiris.space/</link><description>Recent content on</description><generator>Hugo</generator><language>cn</language><lastBuildDate>Sat, 15 Jun 2024 16:13:55 +0000</lastBuildDate><atom:link href="https://booiris.space/index.xml" rel="self" type="application/rss+xml"/><item><title>金字塔原理</title><link>https://booiris.space/posts/read_notes/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 15 Jun 2024 16:13:55 +0000</pubDate><guid>https://booiris.space/posts/read_notes/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86/</guid><description>&lt;h2 id="概述">概述&lt;/h2>
&lt;p>本书分为4个部分。&lt;/p>
&lt;p>&lt;strong>第1篇　表达的逻辑&lt;/strong>　介绍了金字塔原理的基本概念，以及如何利用这一原理构建基本的金字塔结构。本篇的内容足以使你理解和应用简单的公文写作技巧。&lt;/p>
&lt;p>&lt;strong>第2篇　思考的逻辑&lt;/strong>　介绍了如何深入细致地把握思维的细节，以保证你使用的语句真实、明确地呈现你希望表达的思想。本篇举了许多案例，突出了迫使自己进行“冷静思考”对明确阐述思想的重要性。&lt;/p>
&lt;p>&lt;strong>第3篇　解决问题的逻辑&lt;/strong>　读者对象是需要写研究报告的人，以及需要分析复杂问题、提出结论以作出决策的人。本篇介绍了如何在解决问题过程的不同阶段，使用多种框架组织分析过程，使你的思路实际上进行了预先组织，从而可以更方便地应用金字塔原理。&lt;/p>
&lt;p>&lt;del>&lt;strong>第4篇　演示的逻辑&lt;/strong>　介绍了设计 PowerPoint 演示幻灯片的技巧，可以帮助你在用演示文稿呈现具有金字塔结构的思想时，使读者或观众感受到金字塔结构。&lt;/del> (用不到先不看了)&lt;/p>
&lt;h2 id="第一篇-表达的逻辑">第一篇 表达的逻辑&lt;/h2>
&lt;p>第一篇主要所写的是如何让文章更易理解的方法论。方法论的阐释往往需要辅以具体事例，文中也举例了一些事例进行说明。但本章既然是讲述写作的方法论，那么不如直接以原文章的行文顺序做例子，看看原文是否实现了自己提出的方法论的自举( 。&lt;/p>
&lt;h3 id="核心观点">核心观点&lt;/h3>
&lt;blockquote>
&lt;p>对受众（包括读者、听众、观众或学员）来说，最容易理解的顺序是：先了解主要的、抽象的思想，然后了解次要的、为主要思想提供支持的思想。因为主要思想总是从次要思想概括总结得出，文章中所有思想的理想组织结构也必定是一个金字塔结构——由一个总的思想统领多组思想。&lt;/p>&lt;/blockquote>
&lt;p>在本篇开头，一堆引言结束后作者提出了本篇的核心观点: 写作需要按照金字塔的结构，首先提出主要思想，然后介绍多组次要思想支持主要思想。每组思想间的联系可以是纵向的 (即上层思想是对下层的总结)，也可以是横向的 (即多个思想组成同一个逻辑推理过程，而被并列排在一起)。(怎么感觉在教高中议论文😂)&lt;/p>
&lt;p>#todo 加个思维导图&lt;/p>
&lt;h3 id="11-为什么要用金字塔结构">1.1 为什么要用金字塔结构&lt;/h3>
&lt;h2 id="第二篇-思考的逻辑">第二篇 思考的逻辑&lt;/h2>
&lt;h2 id="第三篇-解决问题的逻辑">第三篇 解决问题的逻辑&lt;/h2></description></item><item><title>sicp 章节1</title><link>https://booiris.space/posts/sicp/sicp-%E7%AB%A0%E8%8A%821/</link><pubDate>Sat, 15 Jun 2024 13:46:41 +0000</pubDate><guid>https://booiris.space/posts/sicp/sicp-%E7%AB%A0%E8%8A%821/</guid><description>&lt;blockquote>
&lt;p>题解: &lt;a href="https://github.com/booiris/SICP-learning/tree/master/exercise_1">SICP-learning/exercise_1 at master · booiris/SICP-learning · GitHub&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h2 id="1-building-abstractions-with-procedures">1. Building Abstractions With Procedures&lt;/h2>
&lt;p>sicp 前面部分介绍的内容还是比较基础的，具体是在介绍程序是什么。&lt;/p>
&lt;blockquote>
&lt;p>We are about to study the idea of a &lt;em>computational process&lt;/em>. Computational processes are abstract beings that inhabit computers. As they evolve, processes manipulate other abstract things called &lt;em>data&lt;/em>. The evolution of a process is directed by a pattern of rules called a &lt;em>program&lt;/em>.&lt;/p>
&lt;p>&amp;ndash; &lt;em>computational process&lt;/em> (即计算过程) 是操作数据的过程，这一过程的实现由一组定义的规则(程序)完成。&lt;/p>&lt;/blockquote>
&lt;p>从中可以看出编写的计算机程序有两个重要的元素:&lt;/p>
&lt;ol>
&lt;li>数据&lt;/li>
&lt;li>操作数据的行为&lt;/li>
&lt;/ol>
&lt;p>笔者认为我们编写的程序就是处理数据的过程，是对数据的各种加工变换(这就是为啥一个好的类型系统那么重要，土法炼钢不可取，此处@某一个大道至简的语言😚&lt;a href="https://booiris.space/posts/blog/%E4%B8%BA%E5%95%A5-go-%E4%B8%8D%E6%94%AF%E6%8C%81%E6%B3%9B%E5%9E%8B%E6%96%B9%E6%B3%95/">为啥 go 不支持泛型方法&lt;/a>)。&lt;/p></description></item><item><title>使用 rust 游玩 cf 的姿势</title><link>https://booiris.space/posts/blog/%E4%BD%BF%E7%94%A8-rust-%E6%B8%B8%E7%8E%A9-cf-%E7%9A%84%E5%A7%BF%E5%8A%BF/</link><pubDate>Fri, 15 Mar 2024 21:36:47 +0000</pubDate><guid>https://booiris.space/posts/blog/%E4%BD%BF%E7%94%A8-rust-%E6%B8%B8%E7%8E%A9-cf-%E7%9A%84%E5%A7%BF%E5%8A%BF/</guid><description>&lt;h2 id="cf-是什么">cf 是什么&lt;/h2>
&lt;p>具体来说就是&lt;/p>
&lt;blockquote>
&lt;p>&lt;del>穿越火线是一款非常受欢迎的第一人称射击网络游戏，它也被称作&amp;quot;CrossFire&amp;quot;。它最早由韩国SmileGate公司开发，后来在中国由腾讯公司运营。这个游戏在中国有着庞大的玩家基础，在亚洲其他地区以及全球也有相当多的粉丝。&lt;/del>&lt;/p>
&lt;p>&lt;del>游戏提供了多种模式，包括经典的团队对战、爆破模式、生化模式等。玩家能选择成为全球反恐精英的一员，或者加入恐怖分子阵营。在游戏中，玩家可以购买和升级各种武器装备，与队友协同作战，完成不同的任务和挑战。&lt;/del>&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>Codeforces 是一个在线编程和算法竞赛平台，广受全球程序员和算法爱好者的欢迎。它提供了一个平台，用户可以通过参加定期举办的编程比赛来提高自己的编程技能和算法知识。这些比赛通常分为几个不同的难度等级，适合从初学者到高级程序员的各个水平。&lt;/p>
&lt;p>在Codeforces上，参赛者需要在限定时间内解决一系列编程问题。这些问题覆盖了数据结构、算法、数学、字符串处理、图论等众多领域。参赛者的表现根据解决问题的速度和正确性来评分，并在全球范围内进行排名。 &amp;ndash; chatgpt 生成&lt;/p>&lt;/blockquote>
&lt;p>网站: &lt;a href="https://codeforces.com/">Codeforces&lt;/a>&lt;/p>
&lt;h2 id="rust-是什么">rust 是什么&lt;/h2>
&lt;p>具体来说就是&lt;/p>
&lt;blockquote>
&lt;p>&lt;del>《Rust》是一款多人生存游戏，玩家需收集资源，建造庇护所，与环境和其他玩家互动以求生存。游戏以其开放世界、真实的生存挑战和玩家之间的复杂互动闻名。&lt;/del>&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>Rust是一种开源的系统编程语言，以安全性、速度和并发性为设计目标。它旨在帮助开发者构建高效、可靠的软件，同时避免常见的内存安全错误，如缓冲区溢出。Rust通过一套严格的编译时检查机制实现这些目标，而无需依赖于传统的垃圾回收机制或大量的运行时检查。&lt;/p>
&lt;p>Rust的设计充分考虑了现代硬件的特性，提供了零成本抽象、安全的并发编程模型，以及对内存布局的精细控制。这些特性使Rust成为开发操作系统、游戏引擎、浏览器组件以及需要高性能和高可靠性的应用程序的理想选择。 &amp;ndash; chatgpt 生成&lt;/p>&lt;/blockquote>
&lt;p>网站: &lt;a href="https://www.rust-lang.org/">Rust Programming Language&lt;/a>&lt;/p>
&lt;h2 id="正文">正文&lt;/h2>
&lt;p>rust 标准库只提供了一些基本和常用的数据结构和一套&amp;quot;抽象特性&amp;quot;(或者说规范)，所以可能需要手动造一些轮子，比如处理输入和随机数生成等等，下面将介绍对应的实现代码。&lt;/p>
&lt;h3 id="处理输入">处理输入&lt;/h3>
&lt;p>相较于 c++ 的 &lt;code>scanf&lt;/code> 、&lt;code>cin&lt;/code> ，rust 的标准库中缺少一种方便地从标准输入中读取并构造数据的方法，网上也存在一些讨论:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://users.rust-lang.org/t/why-is-it-so-difficult-to-get-user-input-in-rust/27444/11">Why is it so difficult to get user input in Rust? - help - The Rust Programming Language Forum&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.reddit.com/r/rust/comments/ifpi8p/why_is_it_so_painful_to_read_user_inputs_in_rust/">Why is it so painful to read user inputs in Rust&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>所以使用 rust 解决 codeforces 中的问题所遇到的第一个困难就是如何处理输入，所幸的是这个问题在&lt;a href="https://codeforces.com/blog/entry/67391">这里&lt;/a>有所讨论，具体的解决方法参考这个&lt;a href="https://codeforces.com/blog/entry/67391?#comment-516341">回复&lt;/a>。根据讨论中的代码修改，笔者使用的模板代码如下:&lt;/p></description></item><item><title>为啥 go 不支持泛型方法</title><link>https://booiris.space/posts/blog/%E4%B8%BA%E5%95%A5-go-%E4%B8%8D%E6%94%AF%E6%8C%81%E6%B3%9B%E5%9E%8B%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 20 Feb 2024 22:10:20 +0000</pubDate><guid>https://booiris.space/posts/blog/%E4%B8%BA%E5%95%A5-go-%E4%B8%8D%E6%94%AF%E6%8C%81%E6%B3%9B%E5%9E%8B%E6%96%B9%E6%B3%95/</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>众所周知， go 的泛型并不完善，由于其不支持 &lt;code>parameterized methods&lt;/code> (泛型方法)，导致其无法实现 monad、流式调用等等操作。在这个 issue 中 &lt;a href="https://github.com/golang/go/issues/49085">proposal: spec: allow parameterized methods in methods · Issue #49085 · golang/go · GitHub&lt;/a> 有着充分的讨论，本文旨在对其中的讨论进行总结(加一点&lt;del>指指点点&lt;/del>)，找出 go 是 xx 的原因，如有错误恳请斧正。&lt;/p>
&lt;h2 id="有点长的前置知识">有点长的前置知识…&lt;/h2>
&lt;p>在看 issue 之前，首先介绍一下泛型的通常实现方式，一般有如下几种方式&lt;/p>
&lt;ol>
&lt;li>&lt;strong>类型擦除+虚函数表&lt;/strong>: 这是 Java 泛型的实现方式。在编译时，泛型类型信息会被擦除，所有的泛型被转换为基类 Object (在 go 中相当于将所有的类型变成 interface{} )，编译器同时会在必要时插入类型转换代码来确保类型安全。&lt;/li>
&lt;li>&lt;strong>模板实例化&lt;/strong>: C++ 使用模板来实现泛型。在编译时，模板会生成对应于每种具体类型的实例化代码。如 &lt;code>T add(T a, T b) &lt;/code> 的泛型方法，对于 &lt;code>add(1,2)&lt;/code> 和 &lt;code>add(1.0,2.0)&lt;/code> 会生成两个函数 &lt;code>int add(int a, int b)&lt;/code> 和 &lt;code>double add( double a, double b)&lt;/code> 。&lt;/li>
&lt;li>&lt;strong>即时编译&lt;/strong>: &lt;a href="https://hackernoon.com/how-generics-differ-in-java-and-c">How Generics Differ in Java and C# | HackerNoon&lt;/a>, &lt;a href="https://zhuanlan.zhihu.com/p/348761322">C#泛型详解 - 知乎&lt;/a>, &lt;a href="https://stackoverflow.com/questions/31876372/what-is-reification">c# - What is reification? - Stack Overflow&lt;/a>，从这些链接可以大致看出，c# 的泛型实现是编译时使用占位符表示泛型类型，然后在运行时动态实例化各种类型。&lt;/li>
&lt;/ol>
&lt;p>回到 go 的泛型，实际上 go 的泛型实现方式有三种提案，下面分别介绍这三种提案，有助于后续对 issue 中的讨论进行分析。(本来想简单写写的，写着写着太长了，不想看的请跳至 &lt;a href="https://booiris.space/posts/blog/%E4%B8%BA%E5%95%A5-go-%E4%B8%8D%E6%94%AF%E6%8C%81%E6%B3%9B%E5%9E%8B%E6%96%B9%E6%B3%95/#%e6%ad%a3%e6%96%87">正文&lt;/a> 部分)&lt;/p></description></item><item><title>monad 粗浅介绍</title><link>https://booiris.space/posts/blog/monad-%E7%B2%97%E6%B5%85%E4%BB%8B%E7%BB%8D/</link><pubDate>Tue, 12 Dec 2023 21:20:47 +0000</pubDate><guid>https://booiris.space/posts/blog/monad-%E7%B2%97%E6%B5%85%E4%BB%8B%E7%BB%8D/</guid><description>&lt;h2 id="什么是-monad">什么是 monad?&lt;/h2>
&lt;p>monad(单子) 是函数式编程中的一种抽象，本文旨在对 monad 的粗浅介绍，所以跳过其数学上的定义和结构性证明(其实是目前笔者也不太懂🤫)，通过一些具体的例子说明它的概念和作用。&lt;/p>
&lt;h3 id="定义">定义&lt;/h3>
&lt;p>尽管没有太复杂的数学概念，但还是需要一个定义说明什么样的东西才能称之为 monad。在接下来的说明中，除了列举出数学定义以外，还有其在 go 语言中的具体表现形式。在 wiki 的定义中:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Monad_%28functional_programming%29#Definition">Monad (functional programming) - Wikipedia&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>一个 monad 包含三个部分:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>类型构造子 &lt;code>M&lt;/code> 。&lt;/p>
&lt;ul>
&lt;li>在 go 中可以理解为一种名为 &lt;code>M&lt;/code> 包裹着 &lt;code>T&lt;/code> 的泛型结构体 &lt;code>M&amp;lt;T&amp;gt;{ val: T }&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>类型转换子 &lt;code>Unit :: T -&amp;gt; M T&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>在 go 中可以理解为由值 &lt;code>T&lt;/code> 构造 &lt;code>M&lt;/code> 的函数 &lt;code>func Unit[T any] (val T) -&amp;gt; M&amp;lt;T&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>组合子 &lt;code>&amp;gt;&amp;gt;= or FlatMap :: M T -&amp;gt; ( T -&amp;gt; M U) -&amp;gt; M U&lt;/code> 。&lt;/p></description></item><item><title>SipHash</title><link>https://booiris.space/posts/blog/siphash/</link><pubDate>Fri, 13 Oct 2023 13:36:05 +0000</pubDate><guid>https://booiris.space/posts/blog/siphash/</guid><description>&lt;blockquote>
&lt;p>论文 &lt;a href="https://eprint.iacr.org/2012/351.pdf">eprint.iacr.org/2012/351.pdf&lt;/a>&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>代码位置 &lt;a href="https://github.com/rust-lang/rust/blob/1.72.0/library/core/src/hash/sip.rs">library/core/src/hash/sip.rs&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>SipHash 是一类针对短消息设计的伪随机函数族，相较于其他的哈希函数有在短消息上性能高、由于随机输入的存在难以构造&lt;a href="../todo/todo.md">哈希 dos 攻击&lt;/a>的优点，是 rust 、python 的内置哈希函数实现。&lt;/p>
&lt;h2 id="实现">实现&lt;/h2>
&lt;p>对于 SipHash-c-d 函数族，输入为一个 128 bit 的 &lt;code>k&lt;/code> 和 可为空的输入 &lt;code>m&lt;/code>，输出为一个 64 位长度的 &lt;code>SipHash-c-d(k,m)&lt;/code>。其中 &lt;code>c&lt;/code> 为 &amp;ldquo;compression rounds&amp;rdquo; 的次数， &lt;code>d&lt;/code> 为 &amp;ldquo;finalization rounds&amp;rdquo; 的次数，&amp;ldquo;compression rounds&amp;rdquo; 和 &amp;ldquo;finalization rounds&amp;rdquo; 在之后中有说明具体的实现步骤。&lt;/p>
&lt;h3 id="初始化">初始化&lt;/h3>
&lt;p>首先使用 &lt;code>k0&lt;/code>、&lt;code>k1&lt;/code> 初始化四个值 &lt;code>v0&lt;/code> 、&lt;code>v1&lt;/code> 、&lt;code>v2&lt;/code> 、&lt;code>v3&lt;/code>，其中 &lt;code>k0&lt;/code>、&lt;code>k1&lt;/code> 为 输入 &lt;code>k&lt;/code> 的 64 位的小端编码 (也就是两个 u64 值 &lt;code>k0&lt;/code> 、&lt;code>k1&lt;/code> 组成了 &lt;code>k&lt;/code> )。&lt;/p>
&lt;p>对于其中的常量，论文的选取解释为:&lt;/p>
&lt;blockquote>
&lt;p>The initial state constant corresponds to the ASCII string &amp;ldquo;somepseudorandomlygeneratedbytes&amp;rdquo;, big-endian encoded.&lt;/p></description></item><item><title>698. Partition to K Equal Sum Subsets</title><link>https://booiris.space/wiki/leetcode/698.-partition-to-k-equal-sum-subsets/</link><pubDate>Mon, 09 Oct 2023 14:02:07 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/698.-partition-to-k-equal-sum-subsets/</guid><description/></item><item><title>摄影学习</title><link>https://booiris.space/posts/blog/%E6%91%84%E5%BD%B1%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 09 Oct 2023 13:34:26 +0000</pubDate><guid>https://booiris.space/posts/blog/%E6%91%84%E5%BD%B1%E5%AD%A6%E4%B9%A0/</guid><description>&lt;blockquote>
&lt;p>参考+图片来源 &lt;a href="https://www.bilibili.com/video/BV1pv411H78e">从零开始手把手教你学摄影，20节课带你从小白到大师 | 摄影前期拍摄入门教程_哔哩哔哩_bilibili&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h2 id="概念">概念&lt;/h2>
&lt;h3 id="传感器大小分类">传感器大小分类&lt;/h3>
&lt;p>下图来自于&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/camera1.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/camara2.png" alt="">&lt;/p>
&lt;h3 id="焦距">焦距&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/camera3.png" alt="">&lt;/p>
&lt;h3 id="曝光">曝光&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/camera4.png" alt="">&lt;/p>
&lt;h3 id="光圈">光圈&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/camera5.png" alt="">&lt;/p>
&lt;h3 id="快门时间">快门时间&lt;/h3>
&lt;h3 id="感光度-iso">感光度 (ISO)&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/camera6.png" alt="">&lt;/p>
&lt;h3 id="拍摄模式">拍摄模式&lt;/h3></description></item><item><title>目录</title><link>https://booiris.space/wiki/rust_code/</link><pubDate>Mon, 24 Jul 2023 13:27:31 +0000</pubDate><guid>https://booiris.space/wiki/rust_code/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;a href="rust%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%20%281%29%20%E6%A6%82%E8%BF%B0.md">rust 源码分析 (1) 概述&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="rust%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%20%282%29-core-%E5%86%85%E5%AD%98%E6%A8%A1%E5%9D%97.md">rust 源码分析 (2)-core-内存模块&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="rust%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%20%283%29-std-alloc%E6%A8%A1%E5%9D%97.md">rust 源码分析 (3)-std-alloc模块&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="rust%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%20%284%29-std-backtrace%E6%A8%A1%E5%9D%97.md">rust 源码分析 (4)-std-backtrace模块&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="rust%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%20%285%29-std-collection.md">rust 源码分析 (5)-std-collection&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="rust%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%20%286%29-std-collection-HashMap.md">rust 源码分析 (6)-std-collection-HashMap&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Rust For Screeps (3): 系统监控</title><link>https://booiris.space/posts/blog/rust-for-screeps-3-%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/</link><pubDate>Sat, 22 Jul 2023 23:35:45 +0000</pubDate><guid>https://booiris.space/posts/blog/rust-for-screeps-3-%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/</guid><description>&lt;blockquote>
&lt;p>参考 &lt;a href="https://www.jianshu.com/p/de74baf6fb48">Screeps 制作统计图表 - 简书&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>首先说明: 本文使用 docker 将监控系统部署在自有服务器上，所以先决条件是一台能公网访问的服务器(&lt;/p>
&lt;h2 id="整体流程">整体流程&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img@main/20231102131635.png" alt="image.png">&lt;/p>
&lt;h2 id="具体实现">具体实现&lt;/h2>
&lt;h3 id="记录当前状态存入内存">记录当前状态存入内存&lt;/h3>
&lt;p>在 &lt;a href="https://www.jianshu.com/p/de74baf6fb48">Screeps 制作统计图表 - 简书&lt;/a> 中使用的是 &lt;a href="https://booiris.space/posts/blog/rust-for-screeps-2-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B/#memory%20object">memory object&lt;/a> 存储系统信息。遗憾的是在 rust 中无法使用 &lt;code>memory&lt;/code> 对象，但是 screeps 还有另一个存储信息的地方，那就是 &lt;a href="https://booiris.space/posts/blog/rust-for-screeps-2-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B/#raw%20memory">raw memory&lt;/a> 。&lt;/p>
&lt;p>&lt;code>raw memory&lt;/code> 可以存储 10 MB 的序列化后的内容，它由一个个 &lt;code>segment&lt;/code> 组成，每个&lt;code>segment&lt;/code> 最多存储 100 KB 内容。所以可以指定一段 &lt;code>segment&lt;/code> 用于存储当前系统的状态。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">log&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">	&lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>status_segement&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>raw_memory::segments&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">	&lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>status&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>Status::get_status&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">	&lt;/span>status_segement&lt;span style="color:#1f2328">.&lt;/span>set&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">STATUS_INDEX&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>status&lt;span style="color:#1f2328">.&lt;/span>into&lt;span style="color:#1f2328">());&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="访问内存并解析内存内容">访问内存并解析内存内容&lt;/h3>
&lt;p>&lt;a href="https://github.com/booiris/rust-learning/tree/screep_log">GitHub - booiris/rust-learning at screep_log&lt;/a>&lt;/p>
&lt;h3 id="将信息存储到时序数据库中">将信息存储到时序数据库中&lt;/h3>
&lt;h3 id="使用-grafana-制作图表">使用 Grafana 制作图表&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>version: &lt;span style="color:#0a3069">&amp;#39;2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>services:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sync:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> build:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context: ./sync
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dockerfile: Dockerfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: sync:1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./sync/log:/log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> depends_on:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - influxdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"># https://hub.docker.com/_/influxdb 查看参数含义&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> influxdb:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: influxdb:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./influxdb-data:/var/lib/influxdb2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./influxdb-config:/etc/influxdb2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> environment:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#953800">DOCKER_INFLUXDB_INIT_MODE&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>setup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#953800">DOCKER_INFLUXDB_INIT_USERNAME&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#0a3069">${&lt;/span>&lt;span style="color:#953800">username&lt;/span>&lt;span style="color:#0a3069">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#953800">DOCKER_INFLUXDB_INIT_PASSWORD&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#0a3069">${&lt;/span>&lt;span style="color:#953800">pwd&lt;/span>&lt;span style="color:#0a3069">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#953800">DOCKER_INFLUXDB_INIT_ORG&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#0a3069">${&lt;/span>&lt;span style="color:#953800">org&lt;/span>&lt;span style="color:#0a3069">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#953800">DOCKER_INFLUXDB_INIT_BUCKET&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#0a3069">${&lt;/span>&lt;span style="color:#953800">bucket&lt;/span>&lt;span style="color:#0a3069">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"># https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/ 查看参数含义&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> grafana:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: grafana/grafana:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#0a3069">&amp;#39;12002:3000&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./grafana-data:/var/lib/grafana
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./grafana-provisioning/:/etc/grafana/provisioning
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> depends_on:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - influxdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user: &lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#953800">$UID&lt;/span>&lt;span style="color:#0a3069">:&lt;/span>&lt;span style="color:#953800">$GID&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> environment:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#953800">GF_SECURITY_ADMIN_USER&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#0a3069">${&lt;/span>&lt;span style="color:#953800">GRAFANA_USERNAME&lt;/span>&lt;span style="color:#0a3069">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#953800">GF_SECURITY_ADMIN_PASSWORD&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#0a3069">${&lt;/span>&lt;span style="color:#953800">GRAFANA_PASSWORD&lt;/span>&lt;span style="color:#0a3069">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Rust For Screeps (3): 系统监控和 panic 处理</title><link>https://booiris.space/posts/blog/rust-for-screeps-3-%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E5%92%8C-panic-%E5%A4%84%E7%90%86/</link><pubDate>Sat, 22 Jul 2023 23:35:45 +0000</pubDate><guid>https://booiris.space/posts/blog/rust-for-screeps-3-%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E5%92%8C-panic-%E5%A4%84%E7%90%86/</guid><description>&lt;p>#todo&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> TODO: 系统监控和 panic 处理&lt;/li>
&lt;/ul></description></item><item><title>Rust For Screeps (2): 自定义存储模型</title><link>https://booiris.space/posts/blog/rust-for-screeps-2-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B/</link><pubDate>Sat, 22 Jul 2023 21:05:20 +0000</pubDate><guid>https://booiris.space/posts/blog/rust-for-screeps-2-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%98%E5%82%A8%E6%A8%A1%E5%9E%8B/</guid><description>&lt;h2 id="screeps-存储模型">Screeps 存储模型&lt;/h2>
&lt;p>screeps 的存储模型基本如图所示。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img//20230722224904.png" alt="image.png">&lt;/p>
&lt;p>其中存在两种类型的 memory，一个是 &lt;code>memory object&lt;/code> ，另一个是 &lt;code>raw memory&lt;/code> 。&lt;/p>
&lt;h3 id="memory-object">memory object&lt;/h3>
&lt;p>&lt;code>memory object&lt;/code> 的具体介绍在 &lt;a href="https://docs.screeps.com/global-objects.html#Memory-object">Global Objects | Screeps Documentation&lt;/a>。&lt;/p>
&lt;blockquote>
&lt;p>Each player has access to the global object &lt;code>Memory&lt;/code> in which he/she may store any information in the JSON format.&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">Memory&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">someData&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#1f2328">{...};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看出 screeps 本身内置了一个 &lt;code>Memory&lt;/code> 的对象实例。可以往其中添加各种属性来达到存储信息的目的。&lt;/p>
&lt;h3 id="raw-memory">raw memory&lt;/h3>
&lt;p>&lt;code>raw memory&lt;/code> 在这里被提到 &lt;a href="https://docs.screeps.com/global-objects.html#Serialization">Global Objects | Screeps Documentation&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The Memory object is stored in the stringified form and is parsed each time upon the first in the tick access from your script with the help of the &lt;code>JSON.parse&lt;/code> method.&lt;/p></description></item><item><title>Rust For Screeps (1): 初始环境搭建</title><link>https://booiris.space/posts/blog/rust-for-screeps-1-%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link><pubDate>Sat, 22 Jul 2023 19:29:29 +0000</pubDate><guid>https://booiris.space/posts/blog/rust-for-screeps-1-%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid><description>&lt;blockquote>
&lt;p>参考 &lt;a href="https://github.com/rustyscreeps/screeps-starter-rust/">GitHub - rustyscreeps/screeps-starter-rust: Starter Rust AI for Screeps, the JavaScript-based MMO game&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h3 id="安装相关cli">安装相关cli&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cargo install cargo-screeps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>命令包含了构建代码、上传代码等操作。&lt;/p>
&lt;h3 id="下载模板文件">下载模板文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone https://github.com/rustyscreeps/screeps-starter-rust.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6639ba">cd&lt;/span> screeps-starter-rust
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>模板 (版本:&lt;a href="https://github.com/rustyscreeps/cargo-screeps/tree/d91b60f9a13eb0bd763b094acb6a1d749bb1b12f">d91b60f9a13eb0bd763b094acb6a1d749bb1b12f&lt;/a>) 中包含的文件:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Cargo.toml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── example-screeps.toml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── javascript
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── main.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── LICENSE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── README.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── lib.rs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── logging.rs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="模板文件说明">模板文件说明&lt;/h3>
&lt;p>&lt;code>example-screeps.toml&lt;/code> 用于 &lt;code>cargo-screeps&lt;/code> 的配置。&lt;/p>
&lt;p>&lt;code>javascript/main.js&lt;/code> 为游戏主入口，其中内容如下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069">&amp;#34;use strict&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">let&lt;/span> &lt;span style="color:#1f2328">wasm_module&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// replace this with the name of your module
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">const&lt;/span> &lt;span style="color:#1f2328">MODULE_NAME&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0a3069">&amp;#34;screeps-starter-rust&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">function&lt;/span> &lt;span style="color:#1f2328">console_error&lt;/span>&lt;span style="color:#1f2328">(...&lt;/span>&lt;span style="color:#1f2328">args&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">console&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">log&lt;/span>&lt;span style="color:#1f2328">(...&lt;/span>&lt;span style="color:#1f2328">args&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">Game&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">notify&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">args&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">join&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#1f2328">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">module&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">exports&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">loop&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#cf222e">function&lt;/span> &lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">try&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">wasm_module&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">wasm_module&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">loop&lt;/span>&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// attempt to load the wasm only if there&amp;#39;s enough bucket to do a bunch of work this tick
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">Game&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">cpu&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">bucket&lt;/span> &lt;span style="color:#0550ae">&amp;lt;&lt;/span> &lt;span style="color:#0550ae">500&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">console&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">log&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;we are running out of time, pausing compile!&amp;#34;&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#1f2328">JSON&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">stringify&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">Game&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">cpu&lt;/span>&lt;span style="color:#1f2328">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// delect the module from the cache, so we can reload it
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">MODULE_NAME&lt;/span> &lt;span style="color:#cf222e">in&lt;/span> &lt;span style="color:#1f2328">require&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">cache&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">delete&lt;/span> &lt;span style="color:#1f2328">require&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">cache&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#1f2328">MODULE_NAME&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// load the wasm module
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#1f2328">wasm_module&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#1f2328">require&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">MODULE_NAME&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// load the wasm instance!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#1f2328">wasm_module&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">initialize_instance&lt;/span>&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// run the setup function, which configures logging
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#1f2328">wasm_module&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">setup&lt;/span>&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// go ahead and run the loop for its first tick
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#1f2328">wasm_module&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">loop&lt;/span>&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">catch&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">error&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">console_error&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;caught exception:&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#1f2328">error&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#1f2328">error&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">stack&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">console_error&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;stack trace:&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#1f2328">error&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#1f2328">stack&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">console_error&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;resetting VM next tick.&amp;#34;&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">wasm_module&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#cf222e">null&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>文件中 &lt;code>wasm_module&lt;/code> 保存了 wasm 的实例。如果 wasm 的实例存在，就调用 loop 函数运行游戏逻辑。如果 wasm 的实例不存在 (由于更新代码或 screeps 进行了内存回收等原因导致实列被销毁)，&lt;strong>重新载入 wasm 并且调用 setup 函数进行初始化，然后再运行游戏逻辑&lt;/strong>。&lt;/p></description></item><item><title>1157-Online Majority Element In Subarray</title><link>https://booiris.space/wiki/leetcode/1157-online-majority-element-in-subarray/</link><pubDate>Sun, 16 Apr 2023 14:41:57 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/1157-online-majority-element-in-subarray/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>设计一个数据结构，有效地找到给定子数组的 &lt;strong>多数元素&lt;/strong> 。&lt;/p>
&lt;p>子数组的 &lt;strong>多数元素&lt;/strong> 是在子数组中出现 &lt;code>threshold&lt;/code> 次数或次数以上的元素。&lt;/p>
&lt;p>实现 &lt;code>MajorityChecker&lt;/code> 类:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>MajorityChecker(int[] arr)&lt;/code> 会用给定的数组 &lt;code>arr&lt;/code> 对 &lt;code>MajorityChecker&lt;/code> 初始化。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>int query(int left, int right, int threshold)&lt;/code> 返回子数组中的元素  &lt;code>arr[left…right]&lt;/code> 至少出现 &lt;code>threshold&lt;/code> 次数，如果不存在这样的元素则返回 &lt;code>-1&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="题解">题解&lt;/h2>
&lt;ol>
&lt;li>线段树+摩尔投票&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#![allow(dead_code, unused_imports, unused_macros)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cmp::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::collections::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::&lt;span style="color:#cf222e">f32&lt;/span>::consts::E&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::AddAssign&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::Bound::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>macro_rules&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#fff"> &lt;/span>hashmap&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$key&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>::std::collections::HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$key&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[derive(Clone, Copy)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Node&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>num: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>cnt: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Node&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">#[inline]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">new&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>num: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#1f2328">Self&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>Node&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff"> &lt;/span>num&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>AddAssign&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>Node&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">add_assign&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>rhs: &lt;span style="color:#1f2328">Self&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>num&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">==&lt;/span>&lt;span style="color:#fff"> &lt;/span>rhs&lt;span style="color:#1f2328">.&lt;/span>num&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>rhs&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">else&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>rhs&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-=&lt;/span>&lt;span style="color:#fff"> &lt;/span>rhs&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">else&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>num&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>rhs&lt;span style="color:#1f2328">.&lt;/span>num&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>rhs&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>cnt&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">SegTree&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>tree: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>Node&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>val: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>len: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>SegTree&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">#[inline]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">new&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>arr: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#1f2328">Self&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>len&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>arr&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>SegTree&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>tree: &lt;span style="color:#1f2328">vec&lt;/span>&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>Node::new&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>len&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">4&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>val: &lt;span style="color:#1f2328">arr&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>len&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">build&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>id: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>l: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>r: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>l&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">==&lt;/span>&lt;span style="color:#fff"> &lt;/span>r&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">].&lt;/span>num&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>val&lt;span style="color:#1f2328">[&lt;/span>l&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">].&lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">return&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>mid&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>l&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>r&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">/&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>build&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>l&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>mid&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>build&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>mid&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>r&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">query&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>id: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>l: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>r: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>ql: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>qr: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>ans: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#1f2328">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>Node&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>l&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>qr&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">||&lt;/span>&lt;span style="color:#fff"> &lt;/span>r&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>ql&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">return&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>ql&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>l&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>r&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>qr&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>ans&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">return&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>mid&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>l&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>r&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">/&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>query&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>l&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>mid&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>ql&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>qr&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>ans&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>query&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>mid&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>r&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>ql&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>qr&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>ans&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">MajorityChecker&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>seg_tree: &lt;span style="color:#1f2328">SegTree&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>loc: &lt;span style="color:#1f2328">HashMap&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#0a3069">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069"> * `&amp;amp;self` means the method takes an immutable reference.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069"> * If you need a mutable reference, change it to `&amp;amp;mut self` instead.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069"> */&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>MajorityChecker&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">new&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>arr: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#1f2328">Self&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>loc&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>i&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>v&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>arr&lt;span style="color:#1f2328">.&lt;/span>iter&lt;span style="color:#1f2328">().&lt;/span>enumerate&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>loc&lt;span style="color:#1f2328">.&lt;/span>entry&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>v&lt;span style="color:#1f2328">).&lt;/span>or_insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[]).&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>i&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>seg_tree&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>SegTree::new&lt;span style="color:#1f2328">(&lt;/span>arr&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>seg_tree&lt;span style="color:#1f2328">.&lt;/span>build&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>seg_tree&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>MajorityChecker&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff"> &lt;/span>seg_tree&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>loc&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">query&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>left: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>right: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>threshold: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">i32&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>ans&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>Node::new&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>seg_tree&lt;span style="color:#1f2328">.&lt;/span>query&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>seg_tree&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>left&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>right&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>ans&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>loc&lt;span style="color:#1f2328">.&lt;/span>get&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>ans&lt;span style="color:#1f2328">.&lt;/span>num&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>is_none&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">return&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>unwrap&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>partition_point&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>right&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>partition_point&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>left&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>threshold&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>ans&lt;span style="color:#1f2328">.&lt;/span>num&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">else&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#0a3069">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069"> * Your MajorityChecker object will be instantiated and called as such:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069"> * let obj = MajorityChecker::new(arr);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069"> * let ret_1: i32 = obj.query(left, right, threshold);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069"> */&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>arr&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>obj&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>MajorityChecker::new&lt;span style="color:#1f2328">(&lt;/span>arr&lt;span style="color:#1f2328">.&lt;/span>into&lt;span style="color:#1f2328">());&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>ini&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">5&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">4&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">]];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>ini&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">println!&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;res:&lt;/span>&lt;span style="color:#0a3069">{}&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>obj&lt;span style="color:#1f2328">.&lt;/span>query&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">]));&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>树套树&lt;/li>
&lt;/ol></description></item><item><title>1.8 内存分配</title><link>https://booiris.space/wiki/redis/1.8-%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</link><pubDate>Fri, 07 Oct 2022 16:04:18 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.8-%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</guid><description>&lt;h2 id="todo">TODO&lt;/h2></description></item><item><title>1.7 对象</title><link>https://booiris.space/wiki/redis/1.7-%E5%AF%B9%E8%B1%A1/</link><pubDate>Fri, 07 Oct 2022 16:04:06 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.7-%E5%AF%B9%E8%B1%A1/</guid><description>&lt;h2 id="todo">TODO&lt;/h2></description></item><item><title>1.6 压缩列表</title><link>https://booiris.space/wiki/redis/1.6-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</link><pubDate>Fri, 07 Oct 2022 16:03:18 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.6-%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</guid><description>&lt;h2 id="todo">TODO&lt;/h2></description></item><item><title>1.5 整数集合</title><link>https://booiris.space/wiki/redis/1.5-%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</link><pubDate>Fri, 07 Oct 2022 16:02:03 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.5-%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</guid><description>&lt;h2 id="todo">TODO&lt;/h2></description></item><item><title>1.4 跳表</title><link>https://booiris.space/wiki/redis/1.4-%E8%B7%B3%E8%A1%A8/</link><pubDate>Fri, 07 Oct 2022 16:01:44 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.4-%E8%B7%B3%E8%A1%A8/</guid><description>&lt;h2 id="todo">TODO&lt;/h2></description></item><item><title>1.3 字典</title><link>https://booiris.space/wiki/redis/1.3-%E5%AD%97%E5%85%B8/</link><pubDate>Fri, 07 Oct 2022 16:01:18 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.3-%E5%AD%97%E5%85%B8/</guid><description>&lt;h2 id="todo">TODO&lt;/h2></description></item><item><title>面试题 17.19. Missing Two LCCI</title><link>https://booiris.space/wiki/leetcode/%E9%9D%A2%E8%AF%95%E9%A2%98-17.19.-missing-two-lcci/</link><pubDate>Mon, 26 Sep 2022 22:42:10 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/%E9%9D%A2%E8%AF%95%E9%A2%98-17.19.-missing-two-lcci/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>You are given an array with all the numbers from 1 to N appearing exactly once, except for two number that is missing. How can you find the missing number in O(N) time and 0(1) space?&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;h3 id="原地哈希">原地哈希&lt;/h3>
&lt;h3 id="数学">数学&lt;/h3>
&lt;h3 id="位运算">位运算&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#![allow(dead_code, unused_imports, unused_macros)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cmp::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::collections::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::Bound::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>macro_rules&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#fff"> &lt;/span>hashmap&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$key&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>::std::collections::HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$key&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">// impl Solution {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// pub fn missing_two(mut nums: Vec&amp;lt;i32&amp;gt;) -&amp;gt; Vec&amp;lt;i32&amp;gt; {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// nums.push(-1);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// nums.push(-1);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let mut res = vec![];
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// for i in 0..nums.len() {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// while nums[i] != -1 &amp;amp;&amp;amp; nums[i] - 1 != i as i32 {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let temp = nums[i] as usize - 1;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// nums.swap(i, temp);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// for i in 0..nums.len() {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// if nums[i] == -1 {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// res.push(i as i32 + 1);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// res
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">// impl Solution {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// pub fn missing_two(nums: Vec&amp;lt;i32&amp;gt;) -&amp;gt; Vec&amp;lt;i32&amp;gt; {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let sum = nums.iter().sum::&amp;lt;i32&amp;gt;();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let n = nums.len() as i32 + 2;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let sum_two = n * (n + 1) / 2 - sum;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let key = sum_two / 2;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let sum_low = nums.iter().filter(|&amp;amp;&amp;amp;x| x &amp;lt;= key).sum::&amp;lt;i32&amp;gt;();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// let one = key * (key + 1) / 2 - sum_low;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// // println!(&amp;#34;{} {} {}&amp;#34;, sum_two, sum_low, sum);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// vec![one, sum_two - one]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">missing_two&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>nums: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>nums&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#0550ae">..=&lt;/span>n&lt;span style="color:#1f2328">).&lt;/span>into_iter&lt;span style="color:#1f2328">().&lt;/span>for_each&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">^=&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#1f2328">.&lt;/span>into_iter&lt;span style="color:#1f2328">().&lt;/span>for_each&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">^=&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>diff&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>key&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>one&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#0550ae">..=&lt;/span>n&lt;span style="color:#1f2328">).&lt;/span>into_iter&lt;span style="color:#1f2328">().&lt;/span>for_each&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>diff&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">!=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>one&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">^=&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">});&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#1f2328">.&lt;/span>into_iter&lt;span style="color:#1f2328">().&lt;/span>for_each&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>diff&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">!=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>one&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">^=&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">});&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>one&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">^&lt;/span>&lt;span style="color:#fff"> &lt;/span>one&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">println!&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;res:&lt;/span>&lt;span style="color:#0a3069">{:?}&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution::missing_two&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]));&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>开始</title><link>https://booiris.space/wiki/redis/%E5%BC%80%E5%A7%8B/</link><pubDate>Sun, 25 Sep 2022 23:57:53 +0000</pubDate><guid>https://booiris.space/wiki/redis/%E5%BC%80%E5%A7%8B/</guid><description>&lt;blockquote>
&lt;p>参考 《Redis设计与实现》&lt;/p>&lt;/blockquote>
&lt;h2 id="redis-70-代码结构">redis 7.0 代码结构&lt;/h2></description></item><item><title>1.1 SDS(动态字符串)</title><link>https://booiris.space/wiki/redis/1.1-sds%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sat, 24 Sep 2022 21:14:26 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.1-sds%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>&lt;h2 id="sds介绍">SDS介绍&lt;/h2>
&lt;p>Redis自己构建了一种名为简单动态字符串(simple dynamic string, SDS) 的抽象类型，并将其作为Redis的默认字符串表示。&lt;/p>
&lt;h2 id="sds定义">SDS定义&lt;/h2>
&lt;p>在 Redis7.0 中 定义的代码位于 &lt;code>src/sds.h&lt;/code> 中，定义如下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">/* Note: sdshdr5 is never used, we just access the flags byte directly.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * However is here to document the layout of type 5 SDS strings. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#6639ba">__attribute__&lt;/span> &lt;span style="color:#1f2328">((&lt;/span>__packed__&lt;span style="color:#1f2328">))&lt;/span> sdshdr5 &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">unsigned&lt;/span> &lt;span style="color:#cf222e">char&lt;/span> flags&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* 3 lsb of type, and 5 msb of string length */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">char&lt;/span> buf&lt;span style="color:#1f2328">[];&lt;/span> &lt;span style="color:#57606a">// 柔性数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#6639ba">__attribute__&lt;/span> &lt;span style="color:#1f2328">((&lt;/span>__packed__&lt;span style="color:#1f2328">))&lt;/span> sdshdr8 &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint8_t&lt;/span> len&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* used */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint8_t&lt;/span> alloc&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* excluding the header and null terminator */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">unsigned&lt;/span> &lt;span style="color:#cf222e">char&lt;/span> flags&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* 3 lsb of type, 5 unused bits */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">char&lt;/span> buf&lt;span style="color:#1f2328">[];&lt;/span> &lt;span style="color:#57606a">// 柔性数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#6639ba">__attribute__&lt;/span> &lt;span style="color:#1f2328">((&lt;/span>__packed__&lt;span style="color:#1f2328">))&lt;/span> sdshdr16 &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint16_t&lt;/span> len&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* used */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint16_t&lt;/span> alloc&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* excluding the header and null terminator */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">unsigned&lt;/span> &lt;span style="color:#cf222e">char&lt;/span> flags&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* 3 lsb of type, 5 unused bits */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">char&lt;/span> buf&lt;span style="color:#1f2328">[];&lt;/span> &lt;span style="color:#57606a">// 柔性数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#6639ba">__attribute__&lt;/span> &lt;span style="color:#1f2328">((&lt;/span>__packed__&lt;span style="color:#1f2328">))&lt;/span> sdshdr32 &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint32_t&lt;/span> len&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* used */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint32_t&lt;/span> alloc&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* excluding the header and null terminator */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">unsigned&lt;/span> &lt;span style="color:#cf222e">char&lt;/span> flags&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* 3 lsb of type, 5 unused bits */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">char&lt;/span> buf&lt;span style="color:#1f2328">[];&lt;/span> &lt;span style="color:#57606a">// 柔性数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#6639ba">__attribute__&lt;/span> &lt;span style="color:#1f2328">((&lt;/span>__packed__&lt;span style="color:#1f2328">))&lt;/span> sdshdr64 &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint64_t&lt;/span> len&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* used */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">uint64_t&lt;/span> alloc&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* excluding the header and null terminator */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">unsigned&lt;/span> &lt;span style="color:#cf222e">char&lt;/span> flags&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">/* 3 lsb of type, 5 unused bits */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">char&lt;/span> buf&lt;span style="color:#1f2328">[];&lt;/span> &lt;span style="color:#57606a">// 柔性数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据字符串长度不同，用来存放它的sds类型也不同。&lt;/p></description></item><item><title>1.2 链表</title><link>https://booiris.space/wiki/redis/1.2-%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 24 Sep 2022 21:14:26 +0000</pubDate><guid>https://booiris.space/wiki/redis/1.2-%E9%93%BE%E8%A1%A8/</guid><description>&lt;h2 id="todo">TODO&lt;/h2>
&lt;p>1&lt;/p></description></item><item><title>目录</title><link>https://booiris.space/wiki/redis/catalog/</link><pubDate>Sun, 18 Sep 2022 22:09:05 +0000</pubDate><guid>https://booiris.space/wiki/redis/catalog/</guid><description>&lt;blockquote>
&lt;p>参考 《Redis设计与实现》&lt;/p>&lt;/blockquote>
&lt;h2 id="第一章数据对象">第一章：数据对象&lt;/h2>
&lt;h3 id="11-sds动态字符串">1.1 SDS(动态字符串)&lt;/h3>
&lt;h3 id="12-链表">1.2 链表&lt;/h3>
&lt;h3 id="13-字典">1.3 字典&lt;/h3>
&lt;h3 id="14-跳表">1.4 跳表&lt;/h3>
&lt;h3 id="15-整数集合">1.5 整数集合&lt;/h3>
&lt;h3 id="16-压缩列表">1.6 压缩列表&lt;/h3>
&lt;h3 id="17-对象">1.7 对象&lt;/h3>
&lt;h3 id="18-内存分配">1.8 内存分配&lt;/h3>
&lt;h2 id="第二章-rdb-持久化">第二章： RDB 持久化&lt;/h2></description></item><item><title>827. Making A Large Island</title><link>https://booiris.space/wiki/leetcode/827.-making-a-large-island/</link><pubDate>Sun, 18 Sep 2022 21:57:09 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/827.-making-a-large-island/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给你一个大小为&lt;code>n x n&lt;/code>二进制矩阵 &lt;code>grid&lt;/code> 。&lt;strong>最多&lt;/strong>只能将一格&lt;code>0&lt;/code>变成&lt;code>1&lt;/code> 。&lt;/p>
&lt;p>返回执行此操作后，grid 中最大的岛屿面积是多少？&lt;/p>
&lt;p>岛屿由一组上、下、左、右四个方向相连的&lt;code> 1 &lt;/code>形成。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>首先 dfs 染色，得到每个颜色的格子数量。然后枚举整个地图，对于每一个点，遍历它的上下左右的点所在的颜色区域，最后求和得到相连的区域大小。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#![allow(dead_code, unused_imports, unused_macros)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cmp::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::collections::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::Bound::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>macro_rules&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#fff"> &lt;/span>hashmap&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$key&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>::std::collections::HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$key&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">const&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">DIR&lt;/span>: &lt;span style="color:#1f2328">[[&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">4&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">dfs&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>color: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#1f2328">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>vis: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#1f2328">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">bool&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>cnt: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#1f2328">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>HashMap&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>grid: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>p: &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>nowc: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>color&lt;span style="color:#1f2328">[&lt;/span>p&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">][&lt;/span>p&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>nowc&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>vis&lt;span style="color:#1f2328">[&lt;/span>p&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">][&lt;/span>p&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">true&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#1f2328">.&lt;/span>entry&lt;span style="color:#1f2328">(&lt;/span>nowc&lt;span style="color:#1f2328">).&lt;/span>and_modify&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>c&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>c&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">).&lt;/span>or_insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">DIR&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>p&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>p&lt;span style="color:#1f2328">.&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">!&lt;/span>vis&lt;span style="color:#1f2328">[&lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">][&lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">[&lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">][&lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">==&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>dfs&lt;span style="color:#1f2328">(&lt;/span>color&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>vis&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#fff"> &lt;/span>nowc&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">largest_island&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>grid: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">i32&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>HashMap::&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>color&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">].&lt;/span>len&lt;span style="color:#1f2328">()];&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>vis&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#cf222e">false&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">].&lt;/span>len&lt;span style="color:#1f2328">()];&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>now&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>i&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#0550ae">..&lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>j&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#0550ae">..&lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>j&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">==&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">!&lt;/span>vis&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>j&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>dfs&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>color&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>vis&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>grid&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>i&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>j&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#fff"> &lt;/span>now&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>now&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>i&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#0550ae">..&lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>j&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#0550ae">..&lt;/span>grid&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>HashSet::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>d&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">DIR&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>i&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>d&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>j&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>d&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>color&lt;span style="color:#1f2328">[&lt;/span>nx&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">][&lt;/span>ny&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">]);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>grid&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>j&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">==&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>temp&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>cnt&lt;span style="color:#1f2328">.&lt;/span>get&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">).&lt;/span>unwrap&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>max&lt;span style="color:#1f2328">(&lt;/span>res&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>a&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">println!&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;res:&lt;/span>&lt;span style="color:#0a3069">{}&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution::largest_island&lt;span style="color:#1f2328">(&lt;/span>a&lt;span style="color:#1f2328">));&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>857. Minimum Cost to Hire K Workers</title><link>https://booiris.space/wiki/leetcode/857.-minimum-cost-to-hire-k-workers/</link><pubDate>Sun, 11 Sep 2022 16:10:05 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/857.-minimum-cost-to-hire-k-workers/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>有 n 名工人。 给定两个数组 quality 和 wage ，其中，quality[i] 表示第 i 名工人的工作质量，其最低期望工资为 wage[i] 。&lt;/p>
&lt;p>现在我们想雇佣 k 名工人组成一个工资组。在雇佣 一组 k 名工人时，我们必须按照下述规则向他们支付工资：&lt;/p>
&lt;ol>
&lt;li>对工资组中的每名工人，应当按其工作质量与同组其他工人的工作质量的比例来支付工资。&lt;/li>
&lt;li>工资组中的每名工人至少应当得到他们的最低期望工资。&lt;/li>
&lt;/ol>
&lt;p>给定整数 k ，返回 组成满足上述条件的付费群体所需的最小金额 &lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#![allow(dead_code, unused_imports, unused_macros)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cmp::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::collections::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::Bound::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>macro_rules&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#fff"> &lt;/span>hashmap&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$key&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>::std::collections::HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$key&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">mincost_to_hire_workers&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>quality: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>wage: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>k: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">f64&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>quality&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">.&lt;/span>iter&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">.&lt;/span>zip&lt;span style="color:#1f2328">(&lt;/span>wage&lt;span style="color:#1f2328">.&lt;/span>iter&lt;span style="color:#1f2328">())&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">.&lt;/span>map&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>x&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>y&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>x&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>y&lt;span style="color:#1f2328">])&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">.&lt;/span>collect::&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>_&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>sort_unstable_by&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>y&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>y&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]).&lt;/span>cmp&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>y&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">])));&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>q&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>BinaryHeap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>i&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#0550ae">..&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>k&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>res: &lt;span style="color:#cf222e">f64&lt;/span> &lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1000000000.0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>i&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>k&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#0550ae">..&lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#1f2328">.&lt;/span>min&lt;span style="color:#1f2328">(&lt;/span>temp&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">f64&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">/&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">f64&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">f64&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">Some&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>peek&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>x&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>a&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">10&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">10&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>b&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">4&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">8&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">7&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">println!&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;res:&lt;/span>&lt;span style="color:#0a3069">{}&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution::mincost_to_hire_workers&lt;span style="color:#1f2328">(&lt;/span>a&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>b&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">));&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>646. Maximum Length of Pair Chain</title><link>https://booiris.space/wiki/leetcode/646.-maximum-length-of-pair-chain/</link><pubDate>Sat, 03 Sep 2022 22:44:50 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/646.-maximum-length-of-pair-chain/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给定一个数对集合，找出能够形成的最长数对链的长度。&lt;/p>
&lt;p>当且仅当 &lt;code>b &amp;lt; c&lt;/code> 时，数对&lt;code>(c, d)&lt;/code> 才可以跟在 &lt;code>(a, b)&lt;/code> 后面。我们用这种形式来构造一个数对链。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>类似最长上升子序列，创建一个数组维护每一个序列长度对应的最小末尾。对于二维数对的情况，可以先对其按第一个元素排序，然后对第二个元素进行dp。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#[allow(dead_code)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[allow(unused_imports)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cmp::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::collections::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::Bound::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>macro_rules&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#fff"> &lt;/span>hashmap&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$key&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>::std::collections::HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$key&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">find_longest_chain&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>pairs: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">i32&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>pairs&lt;span style="color:#1f2328">.&lt;/span>sort_unstable&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>pairs&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>s&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>e&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>index&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>partition_point&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">|&lt;/span>x&lt;span style="color:#0550ae">|&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>s&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>index&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>get_mut&lt;span style="color:#1f2328">(&lt;/span>index&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">match&lt;/span>&lt;span style="color:#fff"> &lt;/span>index&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">Some&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>min&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>x&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>e&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>_&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>e&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>temp&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">7&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">8&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">4&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">5&lt;/span>&lt;span style="color:#1f2328">]];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">println!&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;res:&lt;/span>&lt;span style="color:#0a3069">{}&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution::find_longest_chain&lt;span style="color:#1f2328">(&lt;/span>temp&lt;span style="color:#1f2328">));&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>linux自启动服务</title><link>https://booiris.space/posts/linux/linux%E8%87%AA%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1/</link><pubDate>Sat, 20 Aug 2022 14:29:28 +0000</pubDate><guid>https://booiris.space/posts/linux/linux%E8%87%AA%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1/</guid><description>&lt;p>自启动文件放在 &lt;code>/usr/lib/systemd/system&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0550ae">[&lt;/span>Unit&lt;span style="color:#0550ae">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#953800">Description&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>code-server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0550ae">[&lt;/span>Service&lt;span style="color:#0550ae">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#953800">Type&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>simple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#953800">ExecStart&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>/usr/bin/code-server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#953800">User&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>your user name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0550ae">[&lt;/span>Install&lt;span style="color:#0550ae">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#953800">WantedBy&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>sudo systemctl daemon&lt;span style="color:#0550ae">-&lt;/span>reload &lt;span style="color:#57606a">#刷新&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start code&lt;span style="color:#0550ae">-&lt;/span>server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl enable code&lt;span style="color:#0550ae">-&lt;/span>server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>1302-Deepest Leaves Sum</title><link>https://booiris.space/wiki/leetcode/1302-deepest-leaves-sum/</link><pubDate>Wed, 17 Aug 2022 20:21:22 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/1302-deepest-leaves-sum/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给出一个二叉树，计算最深一层的节点和。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>dfs，如果当前的层数大于最大层数，则更新最大层数，并且重置节点和。当当前层数等于最大层数的时候，将当前节点值加入节点和。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#[allow(dead_code)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[allow(unused_imports)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cmp::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::collections::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::Bound::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>macro_rules&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#fff"> &lt;/span>hashmap&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$key&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>::std::collections::HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$key&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">// Definition for a binary tree node.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[derive(Debug, PartialEq, Eq)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">TreeNode&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>val: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>left: &lt;span style="color:#6639ba">Option&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>Rc&lt;span style="color:#0550ae">&amp;lt;&lt;/span>RefCell&lt;span style="color:#0550ae">&amp;lt;&lt;/span>TreeNode&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>right: &lt;span style="color:#6639ba">Option&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>Rc&lt;span style="color:#0550ae">&amp;lt;&lt;/span>RefCell&lt;span style="color:#0550ae">&amp;lt;&lt;/span>TreeNode&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>TreeNode&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">#[inline]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">new&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>val: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#1f2328">Self&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>TreeNode&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>val&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>left: &lt;span style="color:#6639ba">None&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>right: &lt;span style="color:#6639ba">None&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">dfs&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>now: &lt;span style="color:#6639ba">Option&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>Rc&lt;span style="color:#0550ae">&amp;lt;&lt;/span>RefCell&lt;span style="color:#0550ae">&amp;lt;&lt;/span>TreeNode&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>depth: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>maxdepth: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#1f2328">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>key: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#1f2328">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">Some&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">ref&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>now&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>depth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>maxdepth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>maxdepth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>depth&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>depth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">==&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>maxdepth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>x&lt;span style="color:#1f2328">.&lt;/span>borrow&lt;span style="color:#1f2328">().&lt;/span>val&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>dfs&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">.&lt;/span>borrow_mut&lt;span style="color:#1f2328">().&lt;/span>left&lt;span style="color:#1f2328">.&lt;/span>take&lt;span style="color:#1f2328">(),&lt;/span>&lt;span style="color:#fff"> &lt;/span>depth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>maxdepth&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>dfs&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">.&lt;/span>borrow_mut&lt;span style="color:#1f2328">().&lt;/span>right&lt;span style="color:#1f2328">.&lt;/span>take&lt;span style="color:#1f2328">(),&lt;/span>&lt;span style="color:#fff"> &lt;/span>depth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>maxdepth&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cell::RefCell&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::rc::Rc&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">deepest_leaves_sum&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>root: &lt;span style="color:#6639ba">Option&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>Rc&lt;span style="color:#0550ae">&amp;lt;&lt;/span>RefCell&lt;span style="color:#0550ae">&amp;lt;&lt;/span>TreeNode&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">i32&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>maxdepth&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>dfs&lt;span style="color:#1f2328">(&lt;/span>root&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>maxdepth&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>key&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(feature = &lt;/span>&lt;span style="color:#0a3069">&amp;#34;local&amp;#34;&lt;/span>&lt;span style="color:#57606a">)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">println!&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;res:&amp;#34;&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>1403-Minimum Subsequence in Non-Increasing Order</title><link>https://booiris.space/wiki/leetcode/1403-minimum-subsequence-in-non-increasing-order/</link><pubDate>Fri, 05 Aug 2022 00:23:19 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/1403-minimum-subsequence-in-non-increasing-order/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给出一个数组，将数组分为两个部分，其中一个部分A和严格大于另一部分和，要求A部分尽可能短，如果先相同长度A的和尽可能大。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>从大到小排序数组，不断取出当前最大的数直到取出的数的和大于剩下的数的和。取出的数集即为答案。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#[allow(dead_code)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[allow(unused_imports)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::cmp::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::collections::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">use&lt;/span>&lt;span style="color:#fff"> &lt;/span>std::ops::Bound::&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>macro_rules&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#fff"> &lt;/span>hashmap&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$key&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>: &lt;span style="color:#1f2328">expr&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">),&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>::std::collections::HashMap::new&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$(&lt;/span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#1f2328">.&lt;/span>insert&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#57606a">$key&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">$val&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>map&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">min_subsequence&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>nums: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#1f2328">.&lt;/span>sort_unstable&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#1f2328">.&lt;/span>reverse&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#1f2328">.&lt;/span>iter&lt;span style="color:#1f2328">().&lt;/span>sum&lt;span style="color:#1f2328">();&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>now&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>num&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>nums&lt;span style="color:#1f2328">.&lt;/span>iter&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>now&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>num&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>num&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">*&lt;/span>num&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">if&lt;/span>&lt;span style="color:#fff"> &lt;/span>now&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>sum&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">break&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#57606a">#[cfg(test)]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6639ba">println!&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0a3069">&amp;#34;res:&lt;/span>&lt;span style="color:#0a3069">{:?}&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>Solution::min_subsequence&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">vec!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">4&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">10&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">9&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">8&lt;/span>&lt;span style="color:#1f2328">]));&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>arch虚拟机安装</title><link>https://booiris.space/posts/linux/arch%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/</link><pubDate>Thu, 04 Aug 2022 00:02:01 +0000</pubDate><guid>https://booiris.space/posts/linux/arch%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/</guid><description>&lt;h3 id="查看ip地址">查看ip地址&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ip addr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="时间同步">时间同步&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>timedatectl set-ntp &lt;span style="color:#6639ba">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="准备磁盘分区">准备磁盘分区&lt;/h2>
&lt;h3 id="显示所有分区">显示所有分区&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>fdisk -l
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="开始分区">开始分区&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>fdisk /dev/sda
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>分区过程参考&lt;a href="https://ericclose.github.io/Installing-Arch-as-a-guest-with-UEFI-and-GPT.html#arch-chroot">网址&lt;/a>&lt;/p>
&lt;h3 id="确认是否生效">确认是否生效&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> fdisk -l /dev/sda
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="格式化分区和设置swap分区">格式化分区和设置swap分区&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkfs.fat -F32 /dev/sda1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkswap /dev/sda2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkfs.ext4 /dev/sda3 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="启用交换分区">启用交换分区&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>swapon /dev/sda2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="挂载根目录">挂载根目录&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mount /dev/sda3 /mnt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="挂载boot目录">挂载boot目录&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir /mnt/boot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount /dev/sda1 /mnt/boot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="安装系统">安装系统&lt;/h2>
&lt;h3 id="修改镜像源">修改镜像源&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vim /etc/pacman.d/mirrorlist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加 &lt;code>Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch&lt;/code> 镜像&lt;/p>
&lt;p>如果安装时报错 &lt;code>ERROR: 5984EA8F3C could not be locally signed&lt;/code> 解决办法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm -fr /etc/pacman.d/gnupg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>umount /etc/pacman.d/gnupg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -fr /etc/pacman.d/gnupg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pacman-key --init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pacman-key --populate archlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pacman -Sy archlinux-keyring
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装系统和网络插件">安装系统和网络插件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacstrap /mnt base linux networkmanager
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置系统">配置系统&lt;/h2>
&lt;h3 id="生成fstab文件">生成fstab文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="进入chroot">进入chroot&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>arch-chroot /mnt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="设置时区">设置时区&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="设置硬件时间同步">设置硬件时间同步&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>hwclock --systohc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装vim">安装vim&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pacman -S vim
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="语言设置">语言设置&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> vim /etc/locale.gen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> en_US
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zh_CN
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="生成语言">生成语言&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>locale-gen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="设置默认语言">设置默认语言&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6639ba">echo&lt;/span> &lt;span style="color:#953800">LANG&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>en_US.UTF-8 &amp;gt; /etc/locale.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建host文件">创建host文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6639ba">echo&lt;/span> YourNewHostname &amp;gt; /etc/hostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加host">添加host&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>vim /etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Static table lookup for hostnames. 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># See hosts(5) for details. 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1 localhost 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>::1 localhost 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.1.1 YourNewHostname.localdomain YourNewHostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="开启网络服务">开启网络服务&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl &lt;span style="color:#6639ba">enable&lt;/span> NetworkManager
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="设置-root-用户密码">设置 root 用户密码&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="安装引导程序">安装引导程序&lt;/h2>
&lt;p>UEFI 系统：&lt;/p></description></item><item><title>nginx反向代理自签名</title><link>https://booiris.space/posts/linux/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%87%AA%E7%AD%BE%E5%90%8D/</link><pubDate>Sat, 02 Jul 2022 16:49:11 +0000</pubDate><guid>https://booiris.space/posts/linux/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%87%AA%E7%AD%BE%E5%90%8D/</guid><description>&lt;h2 id="自签名ca证书">自签名ca证书&lt;/h2>
&lt;p>首先创建cert文件夹保存证书。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir cert
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6639ba">cd&lt;/span> cert
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后创建配置文件cert.cnf，注意如果时ip自签名就在your_IP填写自己的ip，如果是自签名域名就是在your_domain写自己的域名。&lt;/p>
&lt;p>[dn]下CN字段是ca根服务器地址，alt_names下是ca验证的ip和域名地址，一般情况下这两个是一样的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>[req] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prompt = no 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>default_bits = 4096
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>default_md = sha256
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>distinguished_name = dn 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x509_extensions = v3_req
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[dn] 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>C=CN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ST=Shanghai
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>L=Shanghai
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>O=TEST
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OU=Testing Domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CN=$your_IP or $your_domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>emailAddress=admin@localhost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[v3_req]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>basicConstraints=CA:TRUE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>keyUsage=digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>extendedKeyUsage=serverAuth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>subjectAltName=@alt_names
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[alt_names]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IP.1=$your_IP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DNS.1=$your_domain
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据配置文件生成证书。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>openssl req -new -newkey rsa:2048 -days &lt;span style="color:#0550ae">365&lt;/span> -nodes -x509 -keyout cert.key -out cert.crt -config cert.cnf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当前目录下生成两个文件cert.crt和cert.key，至此自签名步骤完成。&lt;/p>
&lt;h2 id="nginx反向代理">nginx反向代理&lt;/h2>
&lt;p>docker拉取nginx镜像。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>新建一个容器获取config文件。&lt;/p></description></item><item><title>513-Find Bottom Left Tree Value</title><link>https://booiris.space/wiki/leetcode/513-find-bottom-left-tree-value/</link><pubDate>Thu, 23 Jun 2022 00:10:14 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/513-find-bottom-left-tree-value/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>找到树中最左下的节点。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>层序遍历树，每次取每一层最左边的节点，最后的值即为最左下的节点。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * Definition for a binary tree node.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * struct TreeNode {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * int val;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode *left;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode *right;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode() : val(0), left(nullptr), right(nullptr) {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * };
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> findBottomLeftValue&lt;span style="color:#1f2328">(&lt;/span>TreeNode &lt;span style="color:#0550ae">*&lt;/span>root&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#0550ae">&amp;lt;&lt;/span>TreeNode &lt;span style="color:#0550ae">*&amp;gt;&lt;/span> q&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>root&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">!&lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>empty&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> len &lt;span style="color:#0550ae">=&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#0550ae">=&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>val&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>len&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">auto&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>left &lt;span style="color:#0550ae">!=&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>left&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>right &lt;span style="color:#0550ae">!=&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>right&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>508-Most Frequent Subtree Sum</title><link>https://booiris.space/wiki/leetcode/508-most-frequent-subtree-sum/</link><pubDate>Sun, 19 Jun 2022 14:18:39 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/508-most-frequent-subtree-sum/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>求树中频率最高的子树和的数字。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>深度优先搜索树，返回当前子树和，然后更新子树和的频率，如果当前子树和大于最大频率，则更新答案。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * Definition for a binary tree node.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * struct TreeNode {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * int val;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode *left;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode *right;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode() : val(0), left(nullptr), right(nullptr) {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * };
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">TreeNode&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> val&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode &lt;span style="color:#0550ae">*&lt;/span>left&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode &lt;span style="color:#0550ae">*&lt;/span>right&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">:&lt;/span> val&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">),&lt;/span> left&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">),&lt;/span> right&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> x&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#0550ae">:&lt;/span> val&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">),&lt;/span> left&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">),&lt;/span> right&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> x&lt;span style="color:#1f2328">,&lt;/span> TreeNode &lt;span style="color:#0550ae">*&lt;/span>left&lt;span style="color:#1f2328">,&lt;/span> TreeNode &lt;span style="color:#0550ae">*&lt;/span>right&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#0550ae">:&lt;/span> val&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">),&lt;/span> left&lt;span style="color:#1f2328">(&lt;/span>left&lt;span style="color:#1f2328">),&lt;/span> right&lt;span style="color:#1f2328">(&lt;/span>right&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> maxcnt &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unordered_map&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> mp&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">dfs&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>TreeNode &lt;span style="color:#0550ae">*&lt;/span>now&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> l&lt;span style="color:#1f2328">,&lt;/span> r&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> l &lt;span style="color:#0550ae">=&lt;/span> dfs&lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>left&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#0550ae">=&lt;/span> dfs&lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>right&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> sum &lt;span style="color:#0550ae">=&lt;/span> now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>val &lt;span style="color:#0550ae">+&lt;/span> l &lt;span style="color:#0550ae">+&lt;/span> r&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mp&lt;span style="color:#1f2328">[&lt;/span>sum&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>mp&lt;span style="color:#1f2328">[&lt;/span>sum&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;gt;&lt;/span> maxcnt&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maxcnt &lt;span style="color:#0550ae">=&lt;/span> mp&lt;span style="color:#1f2328">[&lt;/span>sum&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>clear&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>mp&lt;span style="color:#1f2328">[&lt;/span>sum&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> maxcnt&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>sum&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> sum&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> findFrequentTreeSum&lt;span style="color:#1f2328">(&lt;/span>TreeNode &lt;span style="color:#0550ae">*&lt;/span>root&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dfs&lt;span style="color:#1f2328">(&lt;/span>root&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>1089-Duplicate Zeros</title><link>https://booiris.space/wiki/leetcode/1089-duplicate-zeros/</link><pubDate>Fri, 17 Jun 2022 16:13:02 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/1089-duplicate-zeros/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给你一个长度固定的整数数组 arr，请你将该数组中出现的每个零都复写一遍，并将其余的元素向右平移。&lt;/p>
&lt;p>注意：请不要在超过该数组长度的位置写入元素。&lt;/p>
&lt;p>要求：请对输入的数组 就地 进行上述修改，不要从函数返回任何东西，空间复杂度为 $O(1)$。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>使用双指针，通过维护两个双指针模拟栈。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">void&lt;/span> duplicateZeros&lt;span style="color:#1f2328">(&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>arr&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> top &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>top &lt;span style="color:#0550ae">&amp;lt;&lt;/span> arr&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>arr&lt;span style="color:#1f2328">[&lt;/span>now&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> top&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> now&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> top&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now &lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> now&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> top&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>arr&lt;span style="color:#1f2328">[&lt;/span>now&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>top &lt;span style="color:#0550ae">&amp;lt;&lt;/span> arr&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arr&lt;span style="color:#1f2328">[&lt;/span>top&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> top&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arr&lt;span style="color:#1f2328">[&lt;/span>top&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> arr&lt;span style="color:#1f2328">[&lt;/span>now&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>498-Diagonal Traverse</title><link>https://booiris.space/wiki/leetcode/498-diagonal-traverse/</link><pubDate>Tue, 14 Jun 2022 10:50:39 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/498-diagonal-traverse/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>按对角线遍历数组。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/498-Diagonal_Traverse.png" alt="">&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>只有两种方向，一种斜向上 x-1,y+1；一种斜向下 x+1,y-1。对于拐角处，有几种情况。&lt;/p>
&lt;ol>
&lt;li>在对角处改变方向，这时需要根据在左下角还是右上角的情况做出不同处理。&lt;/li>
&lt;li>在左边和上面改变方向，左边对应 y 小于 0 ，上面对应 x 小于 0 ，这时只需要将 x 或 y重置为0，然后改变方向。&lt;/li>
&lt;li>在右边和下面改变方向，右边对应 y 等于 m ，下边对应 x 等于 n，这是除了将 y 改变为 m-1 ，或将 x 改变为 n-1 ，还需要将对应 x 加 2或者 y 加 2。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> findDiagonalOrder&lt;span style="color:#1f2328">(&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>mat&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> n &lt;span style="color:#0550ae">=&lt;/span> mat&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> m &lt;span style="color:#0550ae">=&lt;/span> mat&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">].&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> dir &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> nowx &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> nowy &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> m &lt;span style="color:#0550ae">*&lt;/span> n&lt;span style="color:#1f2328">;&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>mat&lt;span style="color:#1f2328">[&lt;/span>nowx&lt;span style="color:#1f2328">][&lt;/span>nowy&lt;span style="color:#1f2328">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowx &lt;span style="color:#0550ae">-=&lt;/span> dir&lt;span style="color:#1f2328">,&lt;/span> nowy &lt;span style="color:#0550ae">+=&lt;/span> dir&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nowx &lt;span style="color:#0550ae">&amp;lt;&lt;/span> &lt;span style="color:#0550ae">0&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> nowy &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> m&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowx &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowy &lt;span style="color:#0550ae">=&lt;/span> m &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dir &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#6639ba">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nowx &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> n &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> nowy &lt;span style="color:#0550ae">&amp;lt;&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowx &lt;span style="color:#0550ae">=&lt;/span> n &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowy &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dir &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#6639ba">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nowx &lt;span style="color:#0550ae">&amp;lt;&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowx &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dir &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#6639ba">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nowx &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> n&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowx &lt;span style="color:#0550ae">=&lt;/span> n &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowy &lt;span style="color:#0550ae">+=&lt;/span> &lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dir &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#6639ba">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nowy &lt;span style="color:#0550ae">&amp;lt;&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowy &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dir &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#6639ba">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nowy &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> m&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowy &lt;span style="color:#0550ae">=&lt;/span> m &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nowx &lt;span style="color:#0550ae">+=&lt;/span> &lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dir &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>1051-Height Checker</title><link>https://booiris.space/wiki/leetcode/1051-height-checker/</link><pubDate>Mon, 13 Jun 2022 15:00:05 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/1051-height-checker/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>A school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in non-decreasing order by height. Let this ordering be represented by the integer array expected where expected[i] is the expected height of the ith student in line.&lt;/p>
&lt;p>You are given an integer array heights representing the current order that the students are standing in. Each heights[i] is the height of the ith student in line (0-indexed).&lt;/p></description></item><item><title>890-Find and Replace Pattern</title><link>https://booiris.space/wiki/leetcode/890-find-and-replace-pattern/</link><pubDate>Sun, 12 Jun 2022 15:32:39 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/890-find-and-replace-pattern/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给定一组目标字符串和原字符串，规定一种变换，原字符串中所有相同的字母可以变换为另一种字母。限制为每种字母只能变换一种字母，不同的字母不能变换成相同的字母。如&amp;quot;abb&amp;quot;可以变换为&amp;quot;cdd&amp;quot;，不能变换成&amp;quot;cde&amp;quot;或&amp;quot;ccc&amp;quot;。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>遍历目标字符串中的所有字符，如果长度和原字符串不相等直接跳过，然后遍历原字符串，如果当前字符不存在映射，就对应到目标字符串对应位置的字符，如果存在映射但与当前对应位置字符不相等直接跳过，如果有多个字符对应同一个字符，跳过当前的目标字符串，将所有符合条件的目标字符串放入答案中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> findAndReplacePattern&lt;span style="color:#1f2328">(&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>words&lt;span style="color:#1f2328">,&lt;/span> string pattern&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> key&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">30&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">bool&lt;/span> vis&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">30&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#900;font-weight:bold">x&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> words&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> pattern&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">continue&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset&lt;span style="color:#1f2328">(&lt;/span>key&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">sizeof&lt;/span> key&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset&lt;span style="color:#1f2328">(&lt;/span>vis&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">sizeof&lt;/span> vis&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">bool&lt;/span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> pattern&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>pattern&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0a3069">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>vis&lt;span style="color:#1f2328">[&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0a3069">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#1f2328">])&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">break&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vis&lt;span style="color:#1f2328">[&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0a3069">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key&lt;span style="color:#1f2328">[&lt;/span>pattern&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0a3069">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> x&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>key&lt;span style="color:#1f2328">[&lt;/span>pattern&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0a3069">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> x&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">])&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">break&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>flag&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>926-Flip String to Monotone Increasing</title><link>https://booiris.space/wiki/leetcode/926-flip-string-to-monotone-increasing/</link><pubDate>Sat, 11 Jun 2022 14:27:11 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/926-flip-string-to-monotone-increasing/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给定一串01串，能够对其每一位进行翻转，即0变1，1变0。要求最终得到一个不下降的01串，例如000111111，求最小翻转次数。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>使用前缀和统计每一位左边0和1，和右边0和1的个数，枚举每一位 i 作为0到1上升的边缘。i 左边全为0，右边全为1，所以翻转次数为 i 左边1的个数加上 i 右边0的个数，最后求出最小值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> key0&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">100005&lt;/span>&lt;span style="color:#1f2328">],&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">100005&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">minFlipsMonoIncr&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>string s&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> cnt0 &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> index &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#900;font-weight:bold">x&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> s&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key0&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+=&lt;/span> key0&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">],&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+=&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>x &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#39;0&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt0&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key0&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key1&lt;span style="color:#1f2328">[&lt;/span>index &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> res &lt;span style="color:#0550ae">=&lt;/span> INT_MAX&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;=&lt;/span> s&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#0550ae">=&lt;/span> min&lt;span style="color:#1f2328">(&lt;/span>res&lt;span style="color:#1f2328">,&lt;/span> key1&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> cnt0 &lt;span style="color:#0550ae">-&lt;/span> key0&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>497-Random Point in Non-overlapping Rectangles</title><link>https://booiris.space/wiki/leetcode/497-random-point-in-non-overlapping-rectangles/</link><pubDate>Fri, 10 Jun 2022 00:24:37 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/497-random-point-in-non-overlapping-rectangles/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给出多个在平面上且不相交的多个长方形，要求等概率从这些长方形范围内选出一个点（包含长方形的边），返回点的二维坐标。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>题目中的长方形数量小于100，每个长方形长和宽的长度不大于2000，所以每个长方形最多有 $2000\times2000=4e6$ 个点，总共最多 $4e6\times 100 = 4e8$ 个点。所以首先为每个点编号，然后等概率选取一个点，根据点的编号判断该点在哪个长方形中，然后根据点的编号与长方形左下角点编号的差距计算偏移，然后求出选取点的坐标。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> key&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> maxn &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> rect&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Solution&lt;span style="color:#1f2328">(&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>rects&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#0550ae">:&lt;/span> rect&lt;span style="color:#1f2328">(&lt;/span>rects&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#900;font-weight:bold">x&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> rects&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key&lt;span style="color:#1f2328">.&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>maxn&lt;span style="color:#1f2328">);&lt;/span> &lt;span style="color:#57606a">//Give points numbers
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> maxn &lt;span style="color:#0550ae">+=&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#0550ae">*&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> x&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> pick&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> rand&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">%&lt;/span> maxn&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> index &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>index &lt;span style="color:#0550ae">&amp;lt;&lt;/span> key&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> key&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;lt;=&lt;/span> now&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> &lt;span style="color:#57606a">// get which rectangle the point is in
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> now &lt;span style="color:#0550ae">-=&lt;/span> key&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">];&lt;/span> &lt;span style="color:#57606a">// calculate offset
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#cf222e">int&lt;/span> len &lt;span style="color:#0550ae">=&lt;/span> rect&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">3&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> rect&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>rect&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> now &lt;span style="color:#0550ae">/&lt;/span> len&lt;span style="color:#1f2328">,&lt;/span> rect&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">][&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> now &lt;span style="color:#0550ae">%&lt;/span> len&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * Your Solution object will be instantiated and called as such:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * Solution* obj = new Solution(rects);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * vector&amp;lt;int&amp;gt; param_1 = obj-&amp;gt;pick();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>one way lcci</title><link>https://booiris.space/wiki/leetcode/one-way-lcci/</link><pubDate>Fri, 13 May 2022 11:05:41 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/one-way-lcci/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给出原字符串和目标字符串，有三种操作：&lt;/p>
&lt;ol>
&lt;li>原字符串改变一个字符。&lt;/li>
&lt;li>原字符串删除一个字符。&lt;/li>
&lt;li>原字符串添加一个字符。&lt;/li>
&lt;/ol>
&lt;p>最多可以做一次操作，问能否将原字符串变为目标字符串。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>首先原字符串添加一个字符串相当于目标字符串删除一个字符，所以当原字符串的长度小于目标字符串时交换一下原字符串和目标字符串即可，所以只剩下两种操作需要讨论。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>原字符串改变一个字符：&lt;/p>
&lt;p>首先原字符串和目标字符串长度必须相等，然后遍历一下，如果不同的字符超过一个说明不能改变。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>原字符串删除一个字符：&lt;/p>
&lt;p>遍历字符串，如果不相等就跳过，需要删除这个字符，如果出现两次不同的情况，说明不能改变。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">bool&lt;/span> oneEditAway&lt;span style="color:#1f2328">(&lt;/span>string first&lt;span style="color:#1f2328">,&lt;/span> string second&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>first &lt;span style="color:#0550ae">==&lt;/span> second&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#6639ba">true&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>abs&lt;span style="color:#1f2328">((&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>first&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>second&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>first&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> second&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> cnt &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> first&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>first&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> second&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">])&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnt&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>cnt &lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>first&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">&amp;lt;&lt;/span> second&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> swap&lt;span style="color:#1f2328">(&lt;/span>first&lt;span style="color:#1f2328">,&lt;/span> second&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">bool&lt;/span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> second&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> first&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> i &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#6639ba">true&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>first&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> second&lt;span style="color:#1f2328">[&lt;/span>now&lt;span style="color:#1f2328">])&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>flag&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> now&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#6639ba">true&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>449-Serialize and Deserialize BST</title><link>https://booiris.space/wiki/leetcode/449-serialize-and-deserialize-bst/</link><pubDate>Wed, 11 May 2022 17:54:53 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/449-serialize-and-deserialize-bst/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>将一个搜索树序列化为字符串，然后将字符串反序列化为一棵树。&lt;/p>
&lt;p>序列化： 按照自己的规则将一组数据结构用字符串表示。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>没看到是搜索树，直接用层序遍历序列化，记录每一层的节点数据，空节点用特殊字符表示即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * Definition for a binary tree node.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * struct TreeNode {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * int val;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode *left;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode *right;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * TreeNode(int x) : val(x), left(NULL), right(NULL) {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * };
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Codec&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// Encodes a tree to a single string.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> string serialize&lt;span style="color:#1f2328">(&lt;/span>TreeNode &lt;span style="color:#0550ae">*&lt;/span>root&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>root &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#0a3069">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string res &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0a3069">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#0550ae">&amp;lt;&lt;/span>pair&lt;span style="color:#0550ae">&amp;lt;&lt;/span>TreeNode &lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">char&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> q&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>root&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0a3069">&amp;#39;N&amp;#39;&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">!&lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>empty&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> len &lt;span style="color:#0550ae">=&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>len&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">auto&lt;/span> qf &lt;span style="color:#0550ae">=&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">auto&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> qf&lt;span style="color:#1f2328">.&lt;/span>first&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#0550ae">+=&lt;/span> qf&lt;span style="color:#1f2328">.&lt;/span>second&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">continue&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stringstream ss&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ss &lt;span style="color:#0550ae">&amp;lt;&amp;lt;&lt;/span> now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>val&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string temp&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ss &lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> temp&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#0550ae">+=&lt;/span> temp &lt;span style="color:#0550ae">+&lt;/span> qf&lt;span style="color:#1f2328">.&lt;/span>second&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>left &lt;span style="color:#0550ae">!=&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>left&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0a3069">&amp;#39;L&amp;#39;&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0a3069">&amp;#39;#&amp;#39;&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>right &lt;span style="color:#0550ae">!=&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>right&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0a3069">&amp;#39;R&amp;#39;&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0a3069">&amp;#39;%&amp;#39;&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#0550ae">+=&lt;/span> &lt;span style="color:#0a3069">&amp;#39;$&amp;#39;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// Decodes your encoded data to tree.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> TreeNode &lt;span style="color:#0550ae">*&lt;/span>&lt;span style="color:#6639ba">deserialize&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>string data&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#57606a">// cout&amp;lt;&amp;lt;data&amp;lt;&amp;lt;&amp;#34;\n&amp;#34;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>data &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> index &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string temp &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0a3069">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> &lt;span style="color:#0a3069">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;lt;=&lt;/span> &lt;span style="color:#0a3069">&amp;#39;9&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> temp &lt;span style="color:#0550ae">+=&lt;/span> data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stringstream tt&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tt &lt;span style="color:#0550ae">&amp;lt;&amp;lt;&lt;/span> temp&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> root_v&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tt &lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> root_v&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode &lt;span style="color:#0550ae">*&lt;/span>root &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#cf222e">new&lt;/span> TreeNode&lt;span style="color:#1f2328">(&lt;/span>root_v&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#0550ae">&amp;lt;&lt;/span>TreeNode &lt;span style="color:#0550ae">*&amp;gt;&lt;/span> q&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>root&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TreeNode &lt;span style="color:#0550ae">*&lt;/span>now &lt;span style="color:#0550ae">=&lt;/span> root&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>index &lt;span style="color:#0550ae">&amp;lt;&lt;/span> data&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#39;$&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">!&lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>empty&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> &lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">nullptr&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">continue&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#39;#&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">continue&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#39;%&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">continue&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string temp &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0a3069">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> &lt;span style="color:#0a3069">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;lt;=&lt;/span> &lt;span style="color:#0a3069">&amp;#39;9&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> temp &lt;span style="color:#0550ae">+=&lt;/span> data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> now_val&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stringstream ss&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ss &lt;span style="color:#0550ae">&amp;lt;&amp;lt;&lt;/span> temp&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ss &lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> now_val&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>data&lt;span style="color:#1f2328">[&lt;/span>index&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#39;L&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>left &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#cf222e">new&lt;/span> TreeNode&lt;span style="color:#1f2328">(&lt;/span>now_val&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>left&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>right &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#cf222e">new&lt;/span> TreeNode&lt;span style="color:#1f2328">(&lt;/span>now_val&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#0550ae">-&amp;gt;&lt;/span>right&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> root&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// Your Codec object will be instantiated and called as such:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// Codec* ser = new Codec();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// Codec* deser = new Codec();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// string tree = ser-&amp;gt;serialize(root);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// TreeNode* ans = deser-&amp;gt;deserialize(tree);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">// return ans;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>1728-Cat and Mouse II</title><link>https://booiris.space/wiki/leetcode/1728-cat-and-mouse-ii/</link><pubDate>Tue, 10 May 2022 20:54:08 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/1728-cat-and-mouse-ii/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>A game is played by a cat and a mouse named Cat and Mouse.&lt;/p>
&lt;p>The environment is represented by a grid of size rows x cols, where each element is a wall, floor, player (Cat, Mouse), or food.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Players are represented by the characters &amp;lsquo;C&amp;rsquo;(Cat),&amp;lsquo;M&amp;rsquo;(Mouse).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Floors are represented by the character &amp;lsquo;.&amp;rsquo; and can be walked on.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Walls are represented by the character &amp;lsquo;#&amp;rsquo; and cannot be walked on.&lt;/p></description></item><item><title>942-DI String Match</title><link>https://booiris.space/wiki/leetcode/942-di-string-match/</link><pubDate>Mon, 09 May 2022 13:28:12 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/942-di-string-match/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给出一组字符串，由 &amp;lsquo;D&amp;rsquo; 和 &amp;lsquo;I&amp;rsquo; 组成。这个字符串对应着一个由元素范围为 [0,n] 无重数组的关系：&lt;/p>
&lt;ol>
&lt;li>当 s[i] == &amp;lsquo;I&amp;rsquo;, a[i] &amp;lt; a[i+1]。&lt;/li>
&lt;li>当 s[i] == &amp;lsquo;D&amp;rsquo;, a[i] &amp;gt; a[i+1]。&lt;/li>
&lt;/ol>
&lt;p>举例：&lt;/p>
&lt;p>[3, 2, 0 ,1] 对应的字符串为 &amp;lsquo;DDI&amp;rsquo;。&lt;/p>
&lt;p>给出关系，要求还原任意符合要求的数组。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>贪心地构造数组，设置当前最大值和当前最小值，当前字符为 &amp;lsquo;I&amp;rsquo; 时，插入当前最小值，最小值加1，字符为 &amp;lsquo;D&amp;rsquo; 时类似。 上面过程保证了构造的数组元素关系符合给出的字符串。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> diStringMatch&lt;span style="color:#1f2328">(&lt;/span>string s&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> low &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> high &lt;span style="color:#0550ae">=&lt;/span> s&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#900;font-weight:bold">x&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> s&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>x &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0a3069">&amp;#39;I&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>emplace_back&lt;span style="color:#1f2328">(&lt;/span>low&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>emplace_back&lt;span style="color:#1f2328">(&lt;/span>high&lt;span style="color:#0550ae">--&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>emplace_back&lt;span style="color:#1f2328">(&lt;/span>low&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>442-Find All Duplicates in an Array</title><link>https://booiris.space/wiki/leetcode/442-find-all-duplicates-in-an-array/</link><pubDate>Sun, 08 May 2022 13:46:38 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/442-find-all-duplicates-in-an-array/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给出一个长度为 n 的数组，每个数组元素的值为 [1,n], 数组中存在出现一次和出现两次的元素，要求在 $O(n)$ 时间和 $O(1)$ 空间返回出现两次的元素。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> findDuplicates&lt;span style="color:#1f2328">(&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>nums&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> nums&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nums&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> nums&lt;span style="color:#1f2328">[&lt;/span>nums&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> swap&lt;span style="color:#1f2328">(&lt;/span>nums&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">],&lt;/span> nums&lt;span style="color:#1f2328">[&lt;/span>nums&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> nums&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>nums&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> i&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>nums&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>433-Minimum Genetic Mutation</title><link>https://booiris.space/wiki/leetcode/433-minimum-genetic-mutation/</link><pubDate>Sat, 07 May 2022 13:23:29 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/433-minimum-genetic-mutation/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给出初始字符串、目标字符串和一组中间字符串，有如下规则。&lt;/p>
&lt;ol>
&lt;li>每次改变只能改变字符串中的一位字符。&lt;/li>
&lt;li>改变后的字符串必须在中间字符串中。&lt;/li>
&lt;/ol>
&lt;p>为初始字符串变化为目标字符串所需要的次数。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>根据规则在中间字符串内建图，对于中间字符串内两个不同的字符串 a, b，如果他们相差一位字符，则连上一条双向边。最后以初始字符串作为源点和以目标字符串为汇点建图。&lt;/p>
&lt;p>最后根据建好的图 bfs 一遍即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unordered_map&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> id&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> mp&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> p&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">15&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">bool&lt;/span> vis&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">15&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">minMutation&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>string start&lt;span style="color:#1f2328">,&lt;/span> string end&lt;span style="color:#1f2328">,&lt;/span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>bank&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mp &lt;span style="color:#0550ae">=&lt;/span> bank&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;=&lt;/span> bank&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]]&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> i&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> n &lt;span style="color:#0550ae">=&lt;/span> bank&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> bank&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> j &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> j &lt;span style="color:#0550ae">&amp;lt;&lt;/span> bank&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> j&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>i &lt;span style="color:#0550ae">==&lt;/span> j&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">continue&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> k &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> k &lt;span style="color:#0550ae">&amp;lt;&lt;/span> bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">].&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> k&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>k&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> bank&lt;span style="color:#1f2328">[&lt;/span>j&lt;span style="color:#1f2328">][&lt;/span>k&lt;span style="color:#1f2328">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>flag &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]]].&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>j&lt;span style="color:#1f2328">]]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>j&lt;span style="color:#1f2328">]]].&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> k &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> k &lt;span style="color:#0550ae">&amp;lt;&lt;/span> bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">].&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> k&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>start&lt;span style="color:#1f2328">[&lt;/span>k&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>k&lt;span style="color:#1f2328">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>flag &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">].&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]]].&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> k &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> k &lt;span style="color:#0550ae">&amp;lt;&lt;/span> bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">].&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> k&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>end&lt;span style="color:#1f2328">[&lt;/span>k&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>k&lt;span style="color:#1f2328">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>flag &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#1f2328">[&lt;/span>n&lt;span style="color:#1f2328">].&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#1f2328">[&lt;/span>id&lt;span style="color:#1f2328">[&lt;/span>bank&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">]]].&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>n&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#0550ae">&amp;lt;&lt;/span>pair&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> q&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vis&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">!&lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>empty&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">auto&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#1f2328">.&lt;/span>first &lt;span style="color:#0550ae">==&lt;/span> n&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> now&lt;span style="color:#1f2328">.&lt;/span>second&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> p&lt;span style="color:#1f2328">[&lt;/span>now&lt;span style="color:#1f2328">.&lt;/span>first&lt;span style="color:#1f2328">].&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> nxt &lt;span style="color:#0550ae">=&lt;/span> p&lt;span style="color:#1f2328">[&lt;/span>now&lt;span style="color:#1f2328">.&lt;/span>first&lt;span style="color:#1f2328">][&lt;/span>i&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>vis&lt;span style="color:#1f2328">[&lt;/span>nxt&lt;span style="color:#1f2328">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">continue&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vis&lt;span style="color:#1f2328">[&lt;/span>nxt&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>emplace&lt;span style="color:#1f2328">(&lt;/span>nxt&lt;span style="color:#1f2328">,&lt;/span> now&lt;span style="color:#1f2328">.&lt;/span>second &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>933-Number of Recent Calls</title><link>https://booiris.space/wiki/leetcode/933-number-of-recent-calls/</link><pubDate>Fri, 06 May 2022 15:52:34 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/933-number-of-recent-calls/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>流式输入时间戳为 t 的请求，对于每一次输入，返回 [t-3000,t] 内请求的个数。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>使用队列维护，将小于 t-3000 的数出队，再将 t 入队，返回当前队列元素个数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">RecentCounter&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> q&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RecentCounter&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">ping&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> t&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> low &lt;span style="color:#0550ae">=&lt;/span> t &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">3000&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">!&lt;/span>q&lt;span style="color:#1f2328">.&lt;/span>empty&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> low &lt;span style="color:#0550ae">&amp;gt;&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>front&lt;span style="color:#1f2328">())&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>pop&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q&lt;span style="color:#1f2328">.&lt;/span>push&lt;span style="color:#1f2328">(&lt;/span>t&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> q&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * Your RecentCounter object will be instantiated and called as such:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * RecentCounter* obj = new RecentCounter();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> * int param_1 = obj-&amp;gt;ping(t);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>713-Subarray Product Less Than K</title><link>https://booiris.space/wiki/leetcode/713-subarray-product-less-than-k/</link><pubDate>Thu, 05 May 2022 10:28:41 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/713-subarray-product-less-than-k/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>求数列字串积小于 k 的字串个数。&lt;/p>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>枚举左节点，对于每一个左节点 i，找到满足字串积小于 k 的最长字串的右节点 high，那么每一个左节点有效的字串个数为 high - i +1。&lt;/p>
&lt;p>对于两个左节点 $i , j$。 如果 $i&amp;lt;j$，那么它们的最长右节点一定有 $high_i &amp;lt;= high_j$ 。枚举左节点时 high 是单调递增的，所以时间复杂度为 $O(n)$。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> numSubarrayProductLessThanK&lt;span style="color:#1f2328">(&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>nums&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">int&lt;/span> k&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> high &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> n &lt;span style="color:#0550ae">=&lt;/span> nums&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> res &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> n&lt;span style="color:#1f2328">;&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>high &lt;span style="color:#0550ae">&amp;lt;&lt;/span> n &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> now &lt;span style="color:#0550ae">*&lt;/span> nums&lt;span style="color:#1f2328">[&lt;/span>high&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;lt;&lt;/span> k&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> now &lt;span style="color:#0550ae">*=&lt;/span> nums&lt;span style="color:#1f2328">[&lt;/span>high&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>high &lt;span style="color:#0550ae">&amp;gt;&lt;/span> i&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#0550ae">+=&lt;/span> high &lt;span style="color:#0550ae">-&lt;/span> i&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> now &lt;span style="color:#0550ae">/=&lt;/span> nums&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> now &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> high &lt;span style="color:#0550ae">=&lt;/span> i &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>1823-Find the Winner of the Circular Game</title><link>https://booiris.space/wiki/leetcode/1823-find-the-winner-of-the-circular-game/</link><pubDate>Wed, 04 May 2022 12:19:42 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/1823-find-the-winner-of-the-circular-game/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>约瑟夫环问题，从 1 开始，数 k 个数，最后一个人出去，再接着数，直到剩下最后一个人，求最后一个人对应的位置。&lt;/p>
&lt;p>下面是 5 个人，每次数 2 个的情况。&lt;/p>
&lt;img src="https://s2.loli.net/2022/05/04/mLVdz7vXEb2irPs.png" >
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>对于最后一个人，每次操作与下一次操作差 k， 递归解决即可，注意下标从 1 开始，注意一下边界条件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> findTheWinner&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> n&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">int&lt;/span> k&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>n &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> pre &lt;span style="color:#0550ae">=&lt;/span> findTheWinner&lt;span style="color:#1f2328">(&lt;/span>n &lt;span style="color:#0550ae">-&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> k&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> res &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>pre &lt;span style="color:#0550ae">+&lt;/span> k&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#0550ae">%&lt;/span> n&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res &lt;span style="color:#0550ae">==&lt;/span> &lt;span style="color:#0550ae">0&lt;/span> &lt;span style="color:#0550ae">?&lt;/span> &lt;span style="color:#900;font-weight:bold">n&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Solution s&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cout &lt;span style="color:#0550ae">&amp;lt;&amp;lt;&lt;/span> s&lt;span style="color:#1f2328">.&lt;/span>findTheWinner&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">5&lt;/span>&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#0550ae">2&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#0550ae">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#0a3069">\n&lt;/span>&lt;span style="color:#0a3069">&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Data Lab</title><link>https://booiris.space/posts/csapp/data-lab/</link><pubDate>Tue, 03 May 2022 23:24:12 +0000</pubDate><guid>https://booiris.space/posts/csapp/data-lab/</guid><description>&lt;h1 id="csapp-data-lab">CS:APP Data Lab&lt;/h1>
&lt;h2 id="restriction">restriction&lt;/h2>
&lt;ol>
&lt;li>Integer constants 0 through 255 (0xFF), inclusive. You are
not allowed to use big constants such as 0xffffffff.&lt;/li>
&lt;li>Function arguments and local variables (no global variables).&lt;/li>
&lt;li>Unary integer operations ! ~&lt;/li>
&lt;li>Binary integer operations &amp;amp; ^ | + &amp;laquo; &amp;raquo;&lt;/li>
&lt;li>NOT ALLOW
&lt;ol>
&lt;li>Use any control constructs such as if, do, while, for, switch, etc.&lt;/li>
&lt;li>Define or use any macros.&lt;/li>
&lt;li>Define any additional functions in this file.&lt;/li>
&lt;li>Call any functions.&lt;/li>
&lt;li>Use any other operations, such as &amp;amp;&amp;amp;, ||, -, or ?:&lt;/li>
&lt;li>Use any form of casting.&lt;/li>
&lt;li>Use any data type other than int. This implies that you
cannot use arrays, structs, or unions.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="question">Question&lt;/h2>
&lt;h3 id="q1">q1&lt;/h3>
&lt;h4 id="description">Description&lt;/h4>
&lt;p>bitXor - x^y using only ~ and &amp;amp;.&lt;/p></description></item><item><title>树状数组</title><link>https://booiris.space/posts/algorithm/segment_tree/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</link><pubDate>Tue, 03 May 2022 13:54:29 +0000</pubDate><guid>https://booiris.space/posts/algorithm/segment_tree/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</guid><description>&lt;img src="https://cdn.jsdelivr.net/gh/booiris-cdn/img/binary_index_tree.svg" width=60% >
&lt;h3 id="区间和模板">区间和模板：&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">struct&lt;/span> &lt;span style="color:#1f2328">Bitree&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>tree: &lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>len: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#cf222e">impl&lt;/span>&lt;span style="color:#fff"> &lt;/span>Bitree&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">#[inline]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">new&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>ini: &lt;span style="color:#cf222e">&amp;amp;&lt;/span>&lt;span style="color:#6639ba">Vec&lt;/span>&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#1f2328">Self&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>Bitree&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>tree: &lt;span style="color:#1f2328">vec&lt;/span>&lt;span style="color:#0550ae">!&lt;/span>&lt;span style="color:#1f2328">[&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff"> &lt;/span>ini&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">],&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>len: &lt;span style="color:#1f2328">ini&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#1f2328">(),&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">};&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">for&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>index&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>v&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">in&lt;/span>&lt;span style="color:#fff"> &lt;/span>ini&lt;span style="color:#1f2328">.&lt;/span>iter&lt;span style="color:#1f2328">().&lt;/span>enumerate&lt;span style="color:#1f2328">()&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#1f2328">.&lt;/span>update&lt;span style="color:#1f2328">(&lt;/span>index&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">*&lt;/span>v&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#57606a">#[inline]&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">lowbit&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">usize&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">return&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">))&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">as&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">update&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>index: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>v: &lt;span style="color:#cf222e">i32&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>pos&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>index&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">while&lt;/span>&lt;span style="color:#fff"> &lt;/span>pos&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;lt;=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>len&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>pos&lt;span style="color:#1f2328">]&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>v&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>pos&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">Self&lt;/span>::lowbit&lt;span style="color:#1f2328">(&lt;/span>pos&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">get&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>n: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">i32&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">let&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">mut&lt;/span>&lt;span style="color:#fff"> &lt;/span>pos&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#fff"> &lt;/span>n&lt;span style="color:#1f2328">;&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">while&lt;/span>&lt;span style="color:#fff"> &lt;/span>pos&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">+=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>tree&lt;span style="color:#1f2328">[&lt;/span>pos&lt;span style="color:#1f2328">];&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>pos&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-=&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">Self&lt;/span>::lowbit&lt;span style="color:#1f2328">(&lt;/span>pos&lt;span style="color:#1f2328">);&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>res&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0a3069">/// `query` 下标从`1`开始
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0a3069">&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">pub&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#cf222e">fn&lt;/span> &lt;span style="color:#6639ba">query&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>l: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">,&lt;/span>&lt;span style="color:#fff"> &lt;/span>r: &lt;span style="color:#cf222e">usize&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>-&amp;gt; &lt;span style="color:#cf222e">i32&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>get&lt;span style="color:#1f2328">(&lt;/span>r&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#6a737d">self&lt;/span>&lt;span style="color:#1f2328">.&lt;/span>get&lt;span style="color:#1f2328">(&lt;/span>l&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">-&lt;/span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff"> &lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff">&lt;/span>&lt;span style="color:#1f2328">}&lt;/span>&lt;span style="color:#fff">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询 $\log(n)$ ,更新 $\log(n)$。&lt;/p></description></item><item><title>937-Reorder Data in Log Files</title><link>https://booiris.space/wiki/leetcode/937-reorder-data-in-log-files/</link><pubDate>Tue, 03 May 2022 12:11:57 +0000</pubDate><guid>https://booiris.space/wiki/leetcode/937-reorder-data-in-log-files/</guid><description>&lt;h2 id="题意">题意&lt;/h2>
&lt;p>给定字符串数组，按规则对数组进行排序，规则如下：&lt;/p>
&lt;ol>
&lt;li>每个字符串第一个单词为键，后面的为数据，存在两种数据，一种只包含小写字母，一种只包含数字。&lt;/li>
&lt;li>所有小写字母数据在数字数据前面。&lt;/li>
&lt;li>对于小写字母数据，按照字典序进行排序，如果数据相同，按照键的字典序排序。&lt;/li>
&lt;li>对于数字数据，保持顺序和原数组相对顺序相同即可。&lt;/li>
&lt;/ol>
&lt;h2 id="题解">题解&lt;/h2>
&lt;p>按照规则模拟即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#include&lt;/span> &lt;span style="color:#57606a">&amp;lt;bits/stdc++.h&amp;gt;&lt;/span>&lt;span style="color:#57606a">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">using&lt;/span> &lt;span style="color:#cf222e">namespace&lt;/span> std&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#define INF 0x3f3f3f3f
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">typedef&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> &lt;span style="color:#cf222e">long&lt;/span> ll&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cf222e">class&lt;/span> &lt;span style="color:#1f2328">Solution&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">public&lt;/span>&lt;span style="color:#0550ae">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> reorderLogFiles&lt;span style="color:#1f2328">(&lt;/span>vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>logs&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>&lt;span style="color:#cf222e">int&lt;/span>&lt;span style="color:#0550ae">&amp;gt;&lt;/span> dig&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>pair&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#1f2328">,&lt;/span> string&lt;span style="color:#0550ae">&amp;gt;&amp;gt;&lt;/span> word&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> i &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span> i &lt;span style="color:#0550ae">&amp;lt;&lt;/span> logs&lt;span style="color:#1f2328">.&lt;/span>size&lt;span style="color:#1f2328">();&lt;/span> i&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">int&lt;/span> now &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string key &lt;span style="color:#0550ae">=&lt;/span> &lt;span style="color:#0a3069">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">while&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>logs&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>now&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">!=&lt;/span> &lt;span style="color:#0a3069">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key &lt;span style="color:#0550ae">+=&lt;/span> logs&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>now&lt;span style="color:#1f2328">],&lt;/span> now&lt;span style="color:#0550ae">++&lt;/span>&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>logs&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>now &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;gt;=&lt;/span> &lt;span style="color:#0a3069">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&amp;amp;&lt;/span> logs&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">][&lt;/span>now &lt;span style="color:#0550ae">+&lt;/span> &lt;span style="color:#0550ae">1&lt;/span>&lt;span style="color:#1f2328">]&lt;/span> &lt;span style="color:#0550ae">&amp;lt;=&lt;/span> &lt;span style="color:#0a3069">&amp;#39;9&amp;#39;&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dig&lt;span style="color:#1f2328">.&lt;/span>push_back&lt;span style="color:#1f2328">(&lt;/span>i&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span> &lt;span style="color:#cf222e">else&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> word&lt;span style="color:#1f2328">.&lt;/span>emplace_back&lt;span style="color:#1f2328">(&lt;/span>key&lt;span style="color:#1f2328">,&lt;/span> logs&lt;span style="color:#1f2328">[&lt;/span>i&lt;span style="color:#1f2328">].&lt;/span>substr&lt;span style="color:#1f2328">(&lt;/span>now&lt;span style="color:#1f2328">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sort&lt;span style="color:#1f2328">(&lt;/span>word&lt;span style="color:#1f2328">.&lt;/span>begin&lt;span style="color:#1f2328">(),&lt;/span> word&lt;span style="color:#1f2328">.&lt;/span>end&lt;span style="color:#1f2328">(),&lt;/span> &lt;span style="color:#1f2328">[](&lt;/span>&lt;span style="color:#cf222e">const&lt;/span> &lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>x&lt;span style="color:#1f2328">,&lt;/span> &lt;span style="color:#cf222e">const&lt;/span> &lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>y&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">if&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">.&lt;/span>second &lt;span style="color:#0550ae">==&lt;/span> y&lt;span style="color:#1f2328">.&lt;/span>second&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> x&lt;span style="color:#1f2328">.&lt;/span>first &lt;span style="color:#0550ae">&amp;lt;&lt;/span> y&lt;span style="color:#1f2328">.&lt;/span>first&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> x&lt;span style="color:#1f2328">.&lt;/span>second &lt;span style="color:#0550ae">&amp;lt;&lt;/span> y&lt;span style="color:#1f2328">.&lt;/span>second&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vector&lt;span style="color:#0550ae">&amp;lt;&lt;/span>string&lt;span style="color:#0550ae">&amp;gt;&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#900;font-weight:bold">x&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> word&lt;span style="color:#1f2328">)&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>emplace_back&lt;span style="color:#1f2328">(&lt;/span>x&lt;span style="color:#1f2328">.&lt;/span>first &lt;span style="color:#0550ae">+&lt;/span> x&lt;span style="color:#1f2328">.&lt;/span>second&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">for&lt;/span> &lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#cf222e">auto&lt;/span> &lt;span style="color:#0550ae">&amp;amp;&lt;/span>&lt;span style="color:#900;font-weight:bold">x&lt;/span> &lt;span style="color:#1f2328">:&lt;/span> dig&lt;span style="color:#1f2328">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res&lt;span style="color:#1f2328">.&lt;/span>push_back&lt;span style="color:#1f2328">((&lt;/span>logs&lt;span style="color:#1f2328">[&lt;/span>x&lt;span style="color:#1f2328">]));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cf222e">return&lt;/span> res&lt;span style="color:#1f2328">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#ifdef LOCAL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">&lt;/span>&lt;span style="color:#cf222e">int&lt;/span> &lt;span style="color:#6639ba">main&lt;/span>&lt;span style="color:#1f2328">()&lt;/span> &lt;span style="color:#1f2328">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ios&lt;span style="color:#0550ae">::&lt;/span>sync_with_stdio&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#6639ba">false&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cin&lt;span style="color:#1f2328">.&lt;/span>tie&lt;span style="color:#1f2328">(&lt;/span>&lt;span style="color:#0550ae">0&lt;/span>&lt;span style="color:#1f2328">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1f2328">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#57606a">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Obsidian 多平台同步方法</title><link>https://booiris.space/posts/blog/sync/</link><pubDate>Sun, 01 May 2022 23:31:00 +0000</pubDate><guid>https://booiris.space/posts/blog/sync/</guid><description>&lt;p>! 推荐自建 webdav 服务&lt;/p>
&lt;h3 id="webdav-同步">webdav 同步&lt;/h3>
&lt;p>使用 &lt;a href="#ZgotmplZ">Remotely Save&lt;/a> 插件进行多平台同步。&lt;/p>
&lt;h4 id="注册-webdav-服务">注册 webdav 服务&lt;/h4>
&lt;p>使用 &lt;a href="https://teracloud.jp/en/">TeraCLOUD&lt;/a> 网盘。使用步骤如下：&lt;/p>
&lt;ol>
&lt;li>注册账号。&lt;/li>
&lt;li>登录 ，进入 mypage 界面。
&lt;img src="https://s2.loli.net/2022/05/01/pFAZdzBSCetUhfH.png" width = 60% >&lt;/li>
&lt;li>开启 webdav 服务，记住用户名和密码。
&lt;img src="https://s2.loli.net/2022/05/01/zaS4pMH7k1l2Den.png" width=100% > 至此，webdav 服务注册成功。&lt;/li>
&lt;/ol>
&lt;h4 id="使用-remotely-save-插件进行同步">使用 Remotely Save 插件进行同步&lt;/h4>
&lt;ol>
&lt;li>安装插件。&lt;/li>
&lt;li>服务选择 webdav。 &lt;img src="https://s2.loli.net/2022/05/01/ornl3QSUEkPKIZt.png" width=100%>&lt;/li>
&lt;li>填写上面的用户名和密码。 &lt;img src="https://s2.loli.net/2022/05/01/d7zONpe2A4XcuQy.png" width=100%>&lt;/li>
&lt;li>测试连接，之后自行设置同步方式即可。&lt;/li>
&lt;/ol></description></item><item><title>插件列表</title><link>https://booiris.space/posts/blog/extension/</link><pubDate>Sun, 01 May 2022 23:30:48 +0000</pubDate><guid>https://booiris.space/posts/blog/extension/</guid><description>&lt;ol>
&lt;li>&lt;a href="#ZgotmplZ">Admonition&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Auto Link Title&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Advanced table&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Better word count&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Calendar&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Check list&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Collapse All&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Data view&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Editor syntax highlight&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Excalidraw&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">File tree alternative&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Full screen plugin&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Image Toolkit&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Link Favicons&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Linter&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Mind map&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Minimal theme settings&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Natural Language Dates&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Note refactor obsidian&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Outliner&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Remember cursor position&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Remotely Save&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ZgotmplZ">Templater&lt;/a>&lt;/li>
&lt;/ol>
&lt;h4 id="auto-link-title">Auto Link Title&lt;/h4>
&lt;p>粘贴互联网链接的时候自动添加标题。&lt;/p>
&lt;h4 id="link-favicons">Link Favicons&lt;/h4>
&lt;p>显示链接的 icon&lt;/p>
&lt;h4 id="image-toolkit">Image Toolkit&lt;/h4>
&lt;p>预览图片&lt;/p>
&lt;h4 id="collapse-all">Collapse All&lt;/h4>
&lt;p>折叠所有文件夹&lt;/p>
&lt;h4 id="natural-language-dates">Natural Language Dates&lt;/h4>
&lt;p>自动生成日期 + @&lt;/p>
&lt;h4 id="better-word-count">Better word count&lt;/h4>
&lt;p>计算字数&lt;/p></description></item><item><title>linux-install</title><link>https://booiris.space/posts/linux/linux-install/</link><pubDate>Sun, 01 May 2022 23:30:29 +0000</pubDate><guid>https://booiris.space/posts/linux/linux-install/</guid><description>&lt;h1 id="wsl">WSL&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>	wsl --list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>卸载对应的系统&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>	wsl --unregister Ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>设置默认系统&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>wslconfig /setdefault Name
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>修改默认用户，主机名，修改/etc/wsl.conf文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0550ae">[&lt;/span>user&lt;span style="color:#0550ae">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#953800">default&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>youruser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0550ae">[&lt;/span>network&lt;span style="color:#0550ae">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#953800">hostname&lt;/span>&lt;span style="color:#0550ae">=&lt;/span>yourhostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ubuntu">Ubuntu&lt;/h2>
&lt;h3 id="换源">换源&lt;/h3>
&lt;ol>
&lt;li>备份&lt;code>sources.list&lt;/code>文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>编辑&lt;code>/etc/apt/sources.list&lt;/code>文件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo vim /etc/apt/sources.list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>在文件前面添加下面的条目(阿里源)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>更新&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="oh-my-bash-美化">oh-my-bash 美化&lt;/h3>
&lt;ol>
&lt;li>安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>bash &lt;span style="color:#0550ae">-&lt;/span>c &lt;span style="color:#0a3069">&amp;#34;$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装软件">安装软件&lt;/h3>
&lt;h4 id="安装i3wm">安装i3wm&lt;/h4>
&lt;ol>
&lt;li>安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo apt install i3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>同步最新仓库&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span style="display:flex;">&lt;span>sudo apt install ca&lt;span style="color:#0550ae">-&lt;/span>certificates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0550ae">/&lt;/span>usr&lt;span style="color:#0550ae">/&lt;/span>lib&lt;span style="color:#0550ae">/&lt;/span>apt&lt;span style="color:#0550ae">/&lt;/span>apt&lt;span style="color:#0550ae">-&lt;/span>helper download&lt;span style="color:#0550ae">-&lt;/span>file https&lt;span style="color:#1f2328">:&lt;/span>&lt;span style="color:#0550ae">//&lt;/span>debian&lt;span style="color:#0550ae">.&lt;/span>sur5r&lt;span style="color:#0550ae">.&lt;/span>net&lt;span style="color:#0550ae">/&lt;/span>i3&lt;span style="color:#0550ae">/&lt;/span>pool&lt;span style="color:#0550ae">/&lt;/span>main&lt;span style="color:#0550ae">/&lt;/span>s&lt;span style="color:#0550ae">/&lt;/span>sur5r&lt;span style="color:#0550ae">-&lt;/span>keyring&lt;span style="color:#0550ae">/&lt;/span>sur5r&lt;span style="color:#0550ae">-&lt;/span>keyring_2021&lt;span style="color:#0550ae">.&lt;/span>&lt;span style="color:#0550ae">02.02&lt;/span>_all&lt;span style="color:#0550ae">.&lt;/span>deb keyring&lt;span style="color:#0550ae">.&lt;/span>deb SHA256&lt;span style="color:#1f2328">:&lt;/span>cccfb1dd7d6b1b6a137bb96ea5b5eef18a0a4a6df1d6c0c37832025d2edaa710
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo dpkg &lt;span style="color:#0550ae">-&lt;/span>i &lt;span style="color:#0550ae">./&lt;/span>keyring&lt;span style="color:#0550ae">.&lt;/span>deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sh &lt;span style="color:#0550ae">-&lt;/span>c &lt;span style="color:#0a3069">&amp;#34;echo &amp;#34;&lt;/span>deb http&lt;span style="color:#1f2328">:&lt;/span>&lt;span style="color:#0550ae">//&lt;/span>debian&lt;span style="color:#0550ae">.&lt;/span>sur5r&lt;span style="color:#0550ae">.&lt;/span>net&lt;span style="color:#0550ae">/&lt;/span>i3&lt;span style="color:#0550ae">/&lt;/span> &lt;span style="color:#0550ae">$&lt;/span>&lt;span style="color:#1f2328">(&lt;/span>grep &lt;span style="color:#0a3069">&amp;#39;^DISTRIB_CODENAME=&amp;#39;&lt;/span> &lt;span style="color:#0550ae">/&lt;/span>etc&lt;span style="color:#0550ae">/&lt;/span>lsb&lt;span style="color:#0550ae">-&lt;/span>release &lt;span style="color:#0550ae">|&lt;/span> cut &lt;span style="color:#0550ae">-&lt;/span>f2 &lt;span style="color:#0550ae">-&lt;/span>d&lt;span style="color:#0550ae">=&lt;/span>&lt;span style="color:#1f2328">)&lt;/span> universe&lt;span style="color:#0a3069">&amp;#34; &amp;gt; /etc/apt/sources.list.d/sur5r-i3.list&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="安装tigervnc">安装tigervnc&lt;/h4>
&lt;ol>
&lt;li>安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo apt install tigervnc-standalone-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>启动&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>vncserver -SecurityTypes=None -localhost=no --I-KNOW-THIS-IS-INSECURE :1 -dpi 150 -geometry=1920x1080
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>显示当前ip&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>ip addr | grep eth0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="安装fehxfce4-terminalrofipolybar">安装feh、xfce4-terminal、rofi、polybar&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo apt install feh xfce4-terminal rofi polybar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="安装picom">安装picom&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo apt install libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libxcb-glx0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libpcre3-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev meson gcc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/yshui/picom.git --depth=1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd picom
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule update --init --recursive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meson --buildtype=release . build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ninja -C build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ninja -C build install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="安装google">安装google&lt;/h4>
&lt;ol>
&lt;li>下载安装包&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo apt install ./google-chrome-stable_current_amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="加载字体">加载字体&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo mkfontscale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo fc-cache -fv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="arch">ARCH&lt;/h2>
&lt;h3 id="创建用户">创建用户&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>useradd -m -G wheel username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># 请自行替换 username 为你的用户名
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>passwd username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># 请自行替换 username 为你的用户名
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/sudoers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># 去掉# %wheel ALL=(ALL)ALL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="设置默认用户">设置默认用户&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>./Arch.exe config --default-user booiris
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="换源-1">换源&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo pacman-key --init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pacman-key --populate archlinux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /etc/pacman.d/mirrorlist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># 清华大学
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>## 163
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server = http://mirrors.163.com/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>## aliyun
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /etc/pacman.conf /etc/pacman.conf.backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /etc/pacman.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[archlinuxcn]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># The Chinese Arch Linux communities packages.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># SigLevel = Optional TrustedOnly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SigLevel = Optional TrustAll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># 清华大学
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo pacman -Syyu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="yay">YAY&lt;/h3>
&lt;ol>
&lt;li>安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo pacman -S yay
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>换源&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>yay --aururl &amp;#34;https://aur.tuna.tsinghua.edu.cn&amp;#34; --save
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装软件-1">安装软件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>yay -S base-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yay -S i3 tigervnc sublime-text-4 google-chrome xfce4-terminal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tighervnc-配置">tighervnc 配置&lt;/h3>
&lt;ol>
&lt;li>用 &lt;code>vncpasswd&lt;/code> 创建密码，它会将哈希处理之后的密码存储在 &lt;code>~/.vnc/passwd&lt;/code>。&lt;/li>
&lt;li>编辑 &lt;code>/etc/tigervnc/vncserver.users&lt;/code> 来定义用户映射&lt;/li>
&lt;li>创建 &lt;code>~/.vnc/config&lt;/code>，其中至少要有一行定义会话的类型，比如 &lt;code>session=foo&lt;/code> （将foo替换为你想要运行的桌面环境）。你可以通过查看 &lt;code>/usr/share/xsessions/&lt;/code> 里的 &lt;code>.desktop&lt;/code> 文件来知道有哪些桌面环境在当前系统上可以使用。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>session=i3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>geometry=1920x1080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dpi=150
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alwaysshared
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="语言">语言&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>sudo vim /etc/locale.gen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo locale-gen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="字体">字体&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>yay -S noto-fonts-emoji adobe-source-han-serif-cn-fonts adobe-source-han-serif-tw-fonts adobe-source-han-sans-cn-fonts adobe-source-han-sans-tw-fonts nerd-fonts-jetbrains-mono ttf-iosevka-nerd ttf-material-icons-git papirus-icon-theme
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="桌面">桌面&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>yay -S polybar rofi feh picom xss-lock dbus-x11 google-chrome
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yay -S fcitx5-im fcitx5-chinese-addons 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建&lt;code>.Xresources&lt;/code>&lt;/p></description></item><item><title>chapter 1</title><link>https://booiris.space/posts/csapp/chapter-1/</link><pubDate>Sun, 01 May 2022 23:30:18 +0000</pubDate><guid>https://booiris.space/posts/csapp/chapter-1/</guid><description>&lt;p>#todo&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> TODO: 没写完&lt;/li>
&lt;/ul>
&lt;h2 id="13">1.3&lt;/h2>
&lt;h3 id="funny-question">funny question&lt;/h3>
&lt;h4 id="optimize-problems">Optimize Problems&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>Is a switch statment always more efficient than a sequence of if-else statements?&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> q1
answer:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>How much overhead is incurred by a function call?&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> q2&lt;/li>
&lt;/ul>
&lt;p>answer:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Is a while loop more efficient than a for loop?&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> q3&lt;/li>
&lt;/ul>
&lt;p>answer:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Are pointer references more efficient than array indexes?&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> q4&lt;/li>
&lt;/ul>
&lt;p>answer:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Why does out loop run so much faster if we sum into a local variable instead of an argument that is passed by reference?&lt;/p></description></item><item><title/><link>https://booiris.space/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://booiris.space/about/</guid><description/></item><item><title/><link>https://booiris.space/memos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://booiris.space/memos/</guid><description>&lt;!DOCTYPE html>
&lt;html lang="zh-CN">

&lt;head>
 &lt;meta charset="utf-8">
 &lt;meta name="viewport" content="width=device-width, initial-scale=1">
 &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@1.0.4/css/versions/bulma-no-dark-mode.min.css">
 &lt;link rel="stylesheet" href="https://booiris.space/css/index.min.css">
 &lt;link rel="stylesheet" href="https://booiris.space/css/flexboxgrid-6.3.1.min.min.css">
 &lt;script src="https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.umd.js"
 type="application/javascript">&lt;/script>
 &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.css" />
 &lt;script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js" type="application/javascript">&lt;/script>
 &lt;style>
 .markdown-content p {
 margin-bottom: 1em;
 }

 .markdown-content pre {
 background-color: #f5f5f5;
 padding: 1em;
 border-radius: 4px;
 overflow-x: auto;
 }

 .markdown-content code {
 background-color: #f5f5f5;
 padding: 0.2em 0.4em;
 border-radius: 3px;
 }

 .markdown-content blockquote {
 border-left: 4px solid #dbdbdb;
 padding-left: 1em;
 color: #474747;
 }

 .thumbnail-img {
 max-width: 200px;
 max-height: 200px;
 }
 &lt;/style>
&lt;/head>

&lt;body>
 &lt;div id="memos-container">
 &lt;/div>

 &lt;div class="modal" id="error-modal">
 &lt;div class="modal-background">&lt;/div>
 &lt;div class="modal-content">
 &lt;div class="notification is-danger">
 &lt;button class="delete" aria-label="close">&lt;/button>
 &lt;p id="error-message" style="margin-bottom: 0px;">get memos failed&lt;/p>
 &lt;/div>
 &lt;/div>
 &lt;/div>

 &lt;script>
 const host = 'booirisapi.asia:8443';
 const errorModal = document.getElementById('error-modal');
 const errorMessage = document.getElementById('error-message');
 let nextPageToken = '';
 let isLoading = false;

 document.querySelector('.modal .delete').addEventListener('click', () => {
 errorModal.classList.remove('is-active');
 });

 document.querySelector('.modal-background').addEventListener('click', () => {
 errorModal.classList.remove('is-active');
 });

 async function fetchMemos(isLoadMore = false) {
 if (isLoading) return;
 isLoading = true;

 try {
 const url = new URL(`https://${host}/api/v1/memos`);
 url.searchParams.append('pageSize', '10');
 if (isLoadMore &amp;&amp; nextPageToken) {
 url.searchParams.append('pageToken', nextPageToken);
 }

 const response = await fetch(url);
 const data = await response.json();
 nextPageToken = data.nextPageToken || '';
 displayMemos(data, isLoadMore);
 } catch (error) {
 errorModal.classList.add('is-active');
 } finally {
 isLoading = false;
 }
 }

 function displayMemos(data, isLoadMore = false) {
 const container = document.getElementById('memos-container');
 if (data &amp;&amp; data.memos) {
 if (!isLoadMore) {
 container.innerHTML = '';
 }
 data.memos.forEach(memo => {
 const memoBox = document.createElement('div');
 memoBox.className = 'box';
 memoBox.style.boxShadow = 'none';
 memoBox.style.border = '3px solid #0A0A0A';
 memoBox.style.marginBottom = '1rem';

 const content = document.createElement('div');
 content.className = 'markdown-content';
 content.innerHTML = marked.parse(memo.content);

 var imgs = [];
 for (let res of memo.resources) {
 if (res.type?.includes('image/')) {
 imgs.push(res);
 }
 }
 var cell = '';
 if (imgs.length > 0) {
 for (let img of imgs) {
 if (img.externalLink?.length > 0) {
 cell += `&lt;a href="${img.externalLink}" data-fancybox>&lt;img class="thumbnail-img" src="${img.externalLink}">&lt;/a>`;
 } else {
 const fullUrl = `https://${host}/file/${img.name}/${img.filename}`;
 cell += `&lt;a href="${fullUrl}" data-fancybox>&lt;img class="thumbnail-img" src="${fullUrl}?thumbnail=1">&lt;/a>`;
 }
 }
 }
 const img = document.createElement('div');
 img.className = 'grid is-gap-1';
 img.innerHTML = cell;

 const time = document.createElement('p');
 time.className = 'is-size-6 has-text-grey';
 time.style.marginBottom = '0';
 time.style.marginTop = '10px';
 time.textContent = new Date(memo.displayTime).toLocaleString('zh-CN', {
 year: 'numeric',
 month: '2-digit',
 day: '2-digit',
 hour: '2-digit',
 minute: '2-digit',
 second: '2-digit',
 hour12: false
 });

 memoBox.appendChild(content);
 memoBox.appendChild(img);
 memoBox.appendChild(time);
 container.appendChild(memoBox);
 });
 }
 }

 Fancybox.bind("[data-fancybox]", {
 });

 document.addEventListener('DOMContentLoaded', () => {
 fetchMemos();

 window.addEventListener('scroll', () => {
 if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 400) {
 if (nextPageToken) {
 fetchMemos(true);
 }
 }
 });
 });
 &lt;/script>
&lt;/body>

&lt;/html></description></item></channel></rss>